[{"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\index.js":"1","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\App.js":"2","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\ErrorBoundary.js":"4","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\context\\updateContext.js":"5","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ForumPage.jsx":"6","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\Feed.jsx":"7","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\Header.jsx":"8","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\AuthForm.jsx":"9","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ThreadView.jsx":"10","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\axios.js":"11","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ThreadList.jsx":"12","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\Post.jsx":"13","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\CreatePost.jsx":"14","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ThreadsPage.jsx":"15","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\SearchBar.jsx":"16"},{"size":288,"mtime":1727407522622,"results":"17","hashOfConfig":"18"},{"size":2139,"mtime":1727408362598,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1630273694000,"results":"20","hashOfConfig":"18"},{"size":517,"mtime":1727407455446,"results":"21","hashOfConfig":"18"},{"size":89,"mtime":1630273694000,"results":"22","hashOfConfig":"18"},{"size":984,"mtime":1727406916429,"results":"23","hashOfConfig":"18"},{"size":2570,"mtime":1727580787122,"results":"24","hashOfConfig":"18"},{"size":776,"mtime":1727408362597,"results":"25","hashOfConfig":"18"},{"size":4361,"mtime":1727319050340,"results":"26","hashOfConfig":"18"},{"size":1471,"mtime":1727407091793,"results":"27","hashOfConfig":"18"},{"size":129,"mtime":1630273694000,"results":"28","hashOfConfig":"18"},{"size":638,"mtime":1727406761709,"results":"29","hashOfConfig":"18"},{"size":10094,"mtime":1727406761709,"results":"30","hashOfConfig":"18"},{"size":2510,"mtime":1727406916429,"results":"31","hashOfConfig":"18"},{"size":1510,"mtime":1727408392151,"results":"32","hashOfConfig":"18"},{"size":540,"mtime":1727581274929,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"6010vk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\index.js",[],["69","70"],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\App.js",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\ErrorBoundary.js",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\context\\updateContext.js",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ForumPage.jsx",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\Feed.jsx",["71"],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\AuthForm.jsx",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ThreadView.jsx",["72"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport Post from './Post';\r\nimport CreatePost from './CreatePost';\r\nimport './css/ThreadView.css';\r\n\r\nconst ThreadView = () => {\r\n    const [thread, setThread] = useState(null);\r\n    const [posts, setPosts] = useState([]);\r\n    const { threadId } = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchThreadAndPosts();\r\n    }, [threadId]);\r\n\r\n    const fetchThreadAndPosts = async () => {\r\n        try {\r\n            const threadResponse = await axios.get(`/api/threads/${threadId}`);\r\n            setThread(threadResponse.data);\r\n\r\n            const postsResponse = await axios.get(`/api/threads/${threadId}/posts`);\r\n            setPosts(postsResponse.data);\r\n        } catch (error) {\r\n            console.error('Error fetching thread and posts:', error);\r\n        }\r\n    };\r\n\r\n    const handlePostCreated = (newPost) => {\r\n        setPosts(prevPosts => [newPost, ...prevPosts]);\r\n    };\r\n\r\n    if (!thread) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"thread-view\">\r\n            <h1>{thread.title}</h1>\r\n            <p>Created by: {thread.user}</p>\r\n            <CreatePost onPostCreated={handlePostCreated} threadId={threadId} />\r\n            {posts.map(post => (\r\n                <Post key={post._id} post={post} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThreadView;","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\axios.js",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ThreadList.jsx",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\Post.jsx",["73"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport './css/Post.css';\r\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2 } from 'lucide-react';\r\nimport axios from '../axios';\r\n\r\nexport default function Post({ post, onPostUpdate, onPostDelete }) {\r\n    const [localPost, setLocalPost] = useState(post);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [showPostOptions, setShowPostOptions] = useState(false);\r\n    const [editingPost, setEditingPost] = useState(false);\r\n    const [editingComment, setEditingComment] = useState(null);\r\n    const [editedContent, setEditedContent] = useState('');\r\n    const [commentOptionsId, setCommentOptionsId] = useState(null);\r\n    const defaultAvatar = \"https://via.placeholder.com/40\";\r\n\r\n    useEffect(() => {\r\n        setLocalPost(post);\r\n        fetchComments();\r\n    }, [post]);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (commentOptionsId && !event.target.closest('.comment-options')) {\r\n                setCommentOptionsId(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside);\r\n        };\r\n    }, [commentOptionsId]);\r\n\r\n    const fetchComments = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`/api/posts/${localPost._id}/comments`);\r\n            setComments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n        }\r\n    }, [localPost._id]);\r\n\r\n    const handleAddComment = async () => {\r\n        if (!newComment.trim()) return;\r\n\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\r\n                content: newComment,\r\n                userId: user._id,\r\n                username: user.username\r\n            });\r\n            setComments([...comments, response.data]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditPost = () => {\r\n        setEditingPost(true);\r\n        setEditedContent(localPost.content);\r\n        setShowPostOptions(false);\r\n    };\r\n\r\n    const handleUpdatePost = async () => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.put(`/api/posts/${localPost._id}`, {\r\n                content: editedContent,\r\n                userId: user._id\r\n            });\r\n            const updatedPost = response.data;\r\n            setLocalPost(updatedPost);\r\n            if (typeof onPostUpdate === 'function') {\r\n                onPostUpdate(updatedPost);\r\n            }\r\n            setEditingPost(false);\r\n            setEditedContent('');\r\n        } catch (error) {\r\n            console.error('Error updating post:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeletePost = async () => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            await axios.delete(`/api/posts/${localPost._id}`, {\r\n                data: { userId: user._id }\r\n            });\r\n            if (typeof onPostDelete === 'function') {\r\n                onPostDelete(localPost._id);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditComment = (comment) => {\r\n        setEditingComment(comment._id);\r\n        setEditedContent(comment.content);\r\n        setCommentOptionsId(null);\r\n    };\r\n\r\n    const handleUpdateComment = async (commentId) => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\r\n                content: editedContent,\r\n                userId: user._id\r\n            });\r\n            setComments(comments.map(c => c._id === commentId ? response.data : c));\r\n            setEditingComment(null);\r\n            setEditedContent('');\r\n        } catch (error) {\r\n            console.error('Error updating comment:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\r\n                data: { userId: user._id }\r\n            });\r\n            setComments(comments.filter(c => c._id !== commentId));\r\n            setCommentOptionsId(null);\r\n        } catch (error) {\r\n            console.error('Error deleting comment:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post-header\">\r\n                <img \r\n                    src={localPost.userProfilePicture || defaultAvatar} \r\n                    alt={localPost.user} \r\n                    className=\"avatar\" \r\n                    onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\r\n                />\r\n                <div className=\"post-info\">\r\n                    <h3>{localPost.user}</h3>\r\n                    <span>{new Date(localPost.createdAt).toLocaleString()}</span>\r\n                </div>\r\n                {post.threadTitle && <h4 className=\"thread-title\">{post.threadTitle}</h4>}\r\n                <div className=\"post-options\">\r\n                    <MoreHorizontal size={20} className=\"more-options\" onClick={() => setShowPostOptions(!showPostOptions)} />\r\n                    {showPostOptions && (\r\n                        <div className=\"options-dropdown\">\r\n                            <button onClick={handleEditPost}><Edit size={16} /> Edit</button>\r\n                            <button onClick={handleDeletePost}><Trash2 size={16} /> Delete</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"post-content\">\r\n                {localPost.title && <h4>{localPost.title}</h4>}\r\n                {editingPost ? (\r\n                    <div>\r\n                        <textarea\r\n                            value={editedContent}\r\n                            onChange={(e) => setEditedContent(e.target.value)}\r\n                        />\r\n                        <button onClick={handleUpdatePost}>Save</button>\r\n                        <button onClick={() => {\r\n                            setEditingPost(false);\r\n                            setEditedContent('');\r\n                        }}>Cancel</button>\r\n                    </div>\r\n                ) : (\r\n                    <p>{localPost.content}</p>\r\n                )}\r\n            </div>\r\n            <div className=\"post-actions\">\r\n                <button><Heart size={20} /> {localPost.likes.length}</button>\r\n                <button><MessageCircle size={20} /> {comments.length}</button>\r\n                <button><Share2 size={20} /></button>\r\n            </div>\r\n            <div className=\"post-comments\">\r\n                {comments.map((comment) => (\r\n                    <div key={comment._id} className=\"comment\">\r\n                        <img \r\n                            src={comment.userProfilePicture || defaultAvatar} \r\n                            alt={comment.username} \r\n                            className=\"avatar-small\" \r\n                            onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\r\n                        />\r\n                        <div className=\"comment-content\">\r\n                            <strong>{comment.username}</strong>\r\n                            {editingComment === comment._id ? (\r\n                                <div>\r\n                                    <textarea\r\n                                        value={editedContent}\r\n                                        onChange={(e) => setEditedContent(e.target.value)}\r\n                                    />\r\n                                    <button onClick={() => handleUpdateComment(comment._id)}>Save</button>\r\n                                    <button onClick={() => {\r\n                                        setEditingComment(null);\r\n                                        setEditedContent('');\r\n                                    }}>Cancel</button>\r\n                                </div>\r\n                            ) : (\r\n                                <p>{comment.content}</p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"comment-options\">\r\n                            <MoreHorizontal size={16} onClick={() => setCommentOptionsId(comment._id)} />\r\n                            {commentOptionsId === comment._id && (\r\n                                <div className=\"options-dropdown\">\r\n                                    <button onClick={() => handleEditComment(comment)}><Edit size={14} /> Edit</button>\r\n                                    <button onClick={() => handleDeleteComment(comment._id)}><Trash2 size={14} /> Delete</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"post-comment-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Write a comment...\"\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            e.preventDefault();\r\n                            handleAddComment();\r\n                        }\r\n                    }}\r\n                />\r\n                <button onClick={handleAddComment}><Send size={20} /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\CreatePost.jsx",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\ThreadsPage.jsx",[],"C:\\Users\\Tech Guru\\Desktop\\Javascript\\social\\frontend\\src\\components\\SearchBar.jsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":11,"column":21,"nodeType":"80","messageId":"81","endLine":11,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":15,"column":8,"nodeType":"84","endLine":15,"endColumn":18,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":20,"column":8,"nodeType":"84","endLine":20,"endColumn":14,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'setUpdater' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchThreadAndPosts'. Either include it or remove the dependency array.","ArrayExpression",["90"],"React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [fetchThreadAndPosts, threadId]",{"range":"96","text":"97"},"Update the dependencies array to be: [fetchComments, post]",{"range":"98","text":"99"},[458,468],"[fetchThreadAndPosts, threadId]",[925,931],"[fetchComments, post]"]