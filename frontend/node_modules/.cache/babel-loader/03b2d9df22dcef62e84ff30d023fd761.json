{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\MessageComposer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from '../axios';\nimport './css/MessageComposer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageComposer = ({\n  conversationId,\n  onMessageSent\n}) => {\n  _s();\n\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n\n    try {\n      const response = await axios.post('/api/messages', {\n        conversationId,\n        content: message\n      });\n      onMessageSent(response.data);\n      setMessage('');\n    } catch (error) {\n      console.error('Failed to send message:', error); // You might want to show an error message to the user here\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-composer\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageComposer, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n\n_c = MessageComposer;\nexport default MessageComposer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageComposer\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/MessageComposer.jsx"],"names":["React","useState","axios","MessageComposer","conversationId","onMessageSent","message","setMessage","handleSubmit","e","preventDefault","trim","response","post","content","data","error","console","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,2BAAP;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAD,KAAuC;AAAA;;AAC3D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACJ,OAAO,CAACK,IAAR,EAAL,EAAqB;;AAErB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,eAAX,EAA4B;AAC/CT,QAAAA,cAD+C;AAE/CU,QAAAA,OAAO,EAAER;AAFsC,OAA5B,CAAvB;AAIAD,MAAAA,aAAa,CAACO,QAAQ,CAACG,IAAV,CAAb;AACAR,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAPD,CAOE,OAAOS,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC,EADY,CAEZ;AACH;AACJ,GAfD;;AAiBA,sBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,QAAQ,EAAER,YAA7C;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAEF,OAFX;AAGI,MAAA,QAAQ,EAAGG,CAAD,IAAOF,UAAU,CAACE,CAAC,CAACS,MAAF,CAASC,KAAV,CAH/B;AAII,MAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/BD;;GAAMhB,e;;KAAAA,e;AAiCN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../axios';\r\nimport './css/MessageComposer.css';\r\n\r\nconst MessageComposer = ({ conversationId, onMessageSent }) => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!message.trim()) return;\r\n\r\n        try {\r\n            const response = await axios.post('/api/messages', {\r\n                conversationId,\r\n                content: message\r\n            });\r\n            onMessageSent(response.data);\r\n            setMessage('');\r\n        } catch (error) {\r\n            console.error('Failed to send message:', error);\r\n            // You might want to show an error message to the user here\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form className=\"message-composer\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n            />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MessageComposer;\r\n"]},"metadata":{},"sourceType":"module"}