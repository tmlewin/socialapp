{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\nimport axios from '../axios';\nimport { updateContext } from '../context/updateContext';\nimport Post from './Post';\nimport SearchBar from './SearchBar';\nimport './css/Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [updater, setUpdater] = useContext(updateContext);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const loader = useRef(null);\n  const fetchPosts = useCallback(async pageNum => {\n    if (!hasMore && pageNum !== 1) return;\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await axios.get(`/api/posts?page=${pageNum}&limit=10`);\n      const newPosts = response.data.posts.map(post => ({ ...post,\n        userProfilePicture: post.userProfilePicture || post.userId.profilePicture\n      }));\n      setPosts(prevPosts => pageNum === 1 ? newPosts : [...prevPosts, ...newPosts]);\n      setFilteredPosts(prevPosts => pageNum === 1 ? newPosts : [...prevPosts, ...newPosts]);\n      setHasMore(response.data.hasMore);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n      setError(\"Failed to fetch posts. Please try again later.\");\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    setPage(1);\n    fetchPosts(1);\n  }, [updater, fetchPosts]);\n  useEffect(() => {\n    const options = {\n      root: null,\n      rootMargin: \"20px\",\n      threshold: 1.0\n    };\n    const observer = new IntersectionObserver(handleObserver, options);\n\n    if (loader.current) {\n      observer.observe(loader.current);\n    }\n\n    return () => {\n      if (loader.current) {\n        observer.unobserve(loader.current);\n      }\n    };\n  }, [hasMore, isLoading]);\n  const handleObserver = useCallback(entities => {\n    const target = entities[0];\n\n    if (target.isIntersecting && hasMore && !isLoading) {\n      setPage(prevPage => prevPage + 1);\n    }\n  }, [hasMore, isLoading]);\n  useEffect(() => {\n    if (page > 1) {\n      fetchPosts(page);\n    }\n  }, [page, fetchPosts]);\n  const handleSearch = useCallback(searchTerm => {\n    if (!searchTerm.trim()) {\n      setFilteredPosts(posts);\n    } else {\n      const filtered = posts.filter(post => post.content.toLowerCase().includes(searchTerm.toLowerCase()) || post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredPosts(filtered);\n    }\n  }, [posts]);\n  const handlePostUpdate = useCallback(updatedPost => {\n    setPosts(prevPosts => {\n      const updatedPosts = prevPosts.map(post => post._id === updatedPost._id ? updatedPost : post);\n      return updatedPosts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    });\n  }, []);\n  const handlePostDelete = useCallback(deletedPostId => {\n    setPosts(prevPosts => prevPosts.filter(post => post._id !== deletedPostId));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onPostUpdate: handlePostUpdate,\n      onPostDelete: handlePostDelete\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loader,\n      style: {\n        height: '20px',\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"Wuu76xQoLkGgS/iTCwHvmGORqUw=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Feed.jsx"],"names":["React","useState","useEffect","useContext","useCallback","useRef","axios","updateContext","Post","SearchBar","Feed","posts","setPosts","filteredPosts","setFilteredPosts","updater","setUpdater","isLoading","setIsLoading","error","setError","page","setPage","hasMore","setHasMore","loader","fetchPosts","pageNum","response","get","newPosts","data","map","post","userProfilePicture","userId","profilePicture","prevPosts","console","options","root","rootMargin","threshold","observer","IntersectionObserver","handleObserver","current","observe","unobserve","entities","target","isIntersecting","prevPage","handleSearch","searchTerm","trim","filtered","filter","content","toLowerCase","includes","title","handlePostUpdate","updatedPost","updatedPosts","_id","sort","a","b","Date","createdAt","handlePostDelete","deletedPostId","height","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\r\nimport axios from '../axios';\r\nimport { updateContext } from '../context/updateContext';\r\nimport Post from './Post';\r\nimport SearchBar from './SearchBar';\r\nimport './css/Feed.css';\r\n\r\nexport default function Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filteredPosts, setFilteredPosts] = useState([]);\r\n    const [updater, setUpdater] = useContext(updateContext);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const loader = useRef(null);\r\n\r\n    const fetchPosts = useCallback(async (pageNum) => {\r\n        if (!hasMore && pageNum !== 1) return;\r\n\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get(`/api/posts?page=${pageNum}&limit=10`);\r\n            const newPosts = response.data.posts.map(post => ({\r\n                ...post,\r\n                userProfilePicture: post.userProfilePicture || post.userId.profilePicture\r\n            }));\r\n\r\n            setPosts(prevPosts => pageNum === 1 ? newPosts : [...prevPosts, ...newPosts]);\r\n            setFilteredPosts(prevPosts => pageNum === 1 ? newPosts : [...prevPosts, ...newPosts]);\r\n            setHasMore(response.data.hasMore);\r\n        } catch (error) {\r\n            console.error(\"Error fetching posts:\", error);\r\n            setError(\"Failed to fetch posts. Please try again later.\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setPage(1);\r\n        fetchPosts(1);\r\n    }, [updater, fetchPosts]);\r\n\r\n    useEffect(() => {\r\n        const options = {\r\n            root: null,\r\n            rootMargin: \"20px\",\r\n            threshold: 1.0\r\n        };\r\n\r\n        const observer = new IntersectionObserver(handleObserver, options);\r\n        if (loader.current) {\r\n            observer.observe(loader.current);\r\n        }\r\n\r\n        return () => {\r\n            if (loader.current) {\r\n                observer.unobserve(loader.current);\r\n            }\r\n        };\r\n    }, [hasMore, isLoading]);\r\n\r\n    const handleObserver = useCallback((entities) => {\r\n        const target = entities[0];\r\n        if (target.isIntersecting && hasMore && !isLoading) {\r\n            setPage((prevPage) => prevPage + 1);\r\n        }\r\n    }, [hasMore, isLoading]);\r\n\r\n    useEffect(() => {\r\n        if (page > 1) {\r\n            fetchPosts(page);\r\n        }\r\n    }, [page, fetchPosts]);\r\n\r\n    const handleSearch = useCallback((searchTerm) => {\r\n        if (!searchTerm.trim()) {\r\n            setFilteredPosts(posts);\r\n        } else {\r\n            const filtered = posts.filter(post =>\r\n                post.content.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                post.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n            setFilteredPosts(filtered);\r\n        }\r\n    }, [posts]);\r\n\r\n    const handlePostUpdate = useCallback((updatedPost) => {\r\n        setPosts(prevPosts => {\r\n            const updatedPosts = prevPosts.map(post => \r\n                post._id === updatedPost._id ? updatedPost : post\r\n            );\r\n            return updatedPosts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        });\r\n    }, []);\r\n\r\n    const handlePostDelete = useCallback((deletedPostId) => {\r\n        setPosts(prevPosts => prevPosts.filter(post => post._id !== deletedPostId));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <SearchBar onSearch={handleSearch} />\r\n            {filteredPosts.map(post => (\r\n                <Post \r\n                    key={post._id} \r\n                    post={post}\r\n                    onPostUpdate={handlePostUpdate}\r\n                    onPostDelete={handlePostDelete}\r\n                />\r\n            ))}\r\n            {isLoading && <div className=\"loading-spinner\">Loading...</div>}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n            {hasMore && <div ref={loader} style={{ height: '20px', margin: '20px 0' }} />}\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}