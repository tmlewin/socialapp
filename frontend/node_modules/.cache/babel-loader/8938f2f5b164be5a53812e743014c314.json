{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Conversation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../axios';\nimport MessageComposer from './MessageComposer';\nimport './css/Conversation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Conversation = () => {\n  _s();\n\n  const {\n    conversationId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`/api/messages/${conversationId}`);\n        setMessages(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to load messages. Please try again.');\n        setLoading(false);\n      }\n    };\n\n    fetchMessages();\n  }, [conversationId]);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  const handleNewMessage = newMessage => {\n    setMessages([...messages, newMessage]);\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading messages...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'currentUser' ? 'sent' : 'received'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: new Date(message.timestamp).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, message._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MessageComposer, {\n      conversationId: conversationId,\n      onMessageSent: handleNewMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Conversation, \"jkrpJNwT8dgQf83vdxKjPmi2+k8=\", false, function () {\n  return [useParams];\n});\n\n_c = Conversation;\nexport default Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Conversation.jsx"],"names":["React","useState","useEffect","useRef","useParams","axios","MessageComposer","Conversation","conversationId","messages","setMessages","loading","setLoading","error","setError","messagesEndRef","fetchMessages","response","get","data","err","current","scrollIntoView","behavior","handleNewMessage","newMessage","map","message","sender","content","Date","timestamp","toLocaleString","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAO,wBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAqBJ,SAAS,EAApC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMc,cAAc,GAAGZ,MAAM,CAAC,IAAD,CAA7B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,aAAa,GAAG,YAAY;AAC9B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,iBAAgBV,cAAe,EAA1C,CAAvB;AACAE,QAAAA,WAAW,CAACO,QAAQ,CAACE,IAAV,CAAX;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJD,CAIE,OAAOQ,GAAP,EAAY;AACVN,QAAAA,QAAQ,CAAC,4CAAD,CAAR;AACAF,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KATD;;AAWAI,IAAAA,aAAa;AAChB,GAbQ,EAaN,CAACR,cAAD,CAbM,CAAT;AAeAN,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACZ,6BAAAa,cAAc,CAACM,OAAf,gFAAwBC,cAAxB,CAAuC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvC;AACH,GAFQ,EAEN,CAACd,QAAD,CAFM,CAAT;;AAIA,QAAMe,gBAAgB,GAAIC,UAAD,IAAgB;AACrCf,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcgB,UAAd,CAAD,CAAX;AACH,GAFD;;AAIA,MAAId,OAAJ,EAAa,oBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,iBACKJ,QAAQ,CAACiB,GAAT,CAAcC,OAAD,iBACV;AAAuB,QAAA,SAAS,EAAG,WAAUA,OAAO,CAACC,MAAR,KAAmB,aAAnB,GAAmC,MAAnC,GAA4C,UAAW,EAApG;AAAA,gCACI;AAAA,oBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA,oBAA6B,IAAIC,IAAJ,CAASH,OAAO,CAACI,SAAjB,EAA4BC,cAA5B;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUL,OAAO,CAACM,GAAlB;AAAA;AAAA;AAAA;AAAA,cADH,CADL,eAOI;AAAK,QAAA,GAAG,EAAElB;AAAV;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,eAAD;AAAiB,MAAA,cAAc,EAAEP,cAAjC;AAAiD,MAAA,aAAa,EAAEgB;AAAhE;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA/CD;;GAAMjB,Y;UACyBH,S;;;KADzBG,Y;AAiDN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport MessageComposer from './MessageComposer';\r\nimport './css/Conversation.css';\r\n\r\nconst Conversation = () => {\r\n    const { conversationId } = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const messagesEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/messages/${conversationId}`);\r\n                setMessages(response.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError('Failed to load messages. Please try again.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchMessages();\r\n    }, [conversationId]);\r\n\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const handleNewMessage = (newMessage) => {\r\n        setMessages([...messages, newMessage]);\r\n    };\r\n\r\n    if (loading) return <div className=\"loading\">Loading messages...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    return (\r\n        <div className=\"conversation\">\r\n            <div className=\"messages-container\">\r\n                {messages.map((message) => (\r\n                    <div key={message._id} className={`message ${message.sender === 'currentUser' ? 'sent' : 'received'}`}>\r\n                        <p>{message.content}</p>\r\n                        <span className=\"timestamp\">{new Date(message.timestamp).toLocaleString()}</span>\r\n                    </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <MessageComposer conversationId={conversationId} onMessageSent={handleNewMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Conversation;\r\n"]},"metadata":{},"sourceType":"module"}