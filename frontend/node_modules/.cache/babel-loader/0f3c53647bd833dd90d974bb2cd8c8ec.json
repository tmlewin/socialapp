{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './css/Post.css';\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2 } from 'lucide-react';\nimport axios from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  onPostUpdate,\n  onPostDelete\n}) {\n  _s();\n\n  const [localPost, setLocalPost] = useState(post);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [showPostOptions, setShowPostOptions] = useState(false);\n  const [editingPost, setEditingPost] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [commentOptionsId, setCommentOptionsId] = useState(null);\n  const defaultAvatar = \"https://via.placeholder.com/40\";\n  useEffect(() => {\n    setLocalPost(post);\n    fetchComments();\n  }, [post]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (commentOptionsId && !event.target.closest('.comment-options')) {\n        setCommentOptionsId(null);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [commentOptionsId]);\n\n  const fetchComments = async () => {\n    try {\n      const response = await axios.get(`/api/posts/${localPost._id}/comments`);\n      setComments(response.data);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\n        content: newComment,\n        userId: user._id,\n        username: user.username,\n        userProfilePicture: user.profilePicture || defaultAvatar\n      });\n      setComments([...comments, response.data]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  const handleEditPost = () => {\n    setEditingPost(true);\n    setEditedContent(localPost.content);\n    setShowPostOptions(false);\n  };\n\n  const handleUpdatePost = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.put(`/api/posts/${localPost._id}`, {\n        content: editedContent,\n        userId: user._id\n      });\n      const updatedPost = response.data;\n      setLocalPost(updatedPost);\n\n      if (typeof onPostUpdate === 'function') {\n        onPostUpdate(updatedPost);\n      }\n\n      setEditingPost(false);\n      setEditedContent('');\n    } catch (error) {\n      console.error('Error updating post:', error);\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await axios.delete(`/api/posts/${localPost._id}`, {\n        data: {\n          userId: user._id\n        }\n      });\n\n      if (typeof onPostDelete === 'function') {\n        onPostDelete(localPost._id);\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  const handleEditComment = comment => {\n    setEditingComment(comment._id);\n    setEditedContent(comment.content);\n    setCommentOptionsId(null);\n  };\n\n  const handleUpdateComment = async commentId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\n        content: editedContent,\n        userId: user._id\n      });\n      setComments(comments.map(c => c._id === commentId ? response.data : c));\n      setEditingComment(null);\n      setEditedContent('');\n    } catch (error) {\n      console.error('Error updating comment:', error);\n    }\n  };\n\n  const handleDeleteComment = async commentId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\n        data: {\n          userId: user._id\n        }\n      });\n      setComments(comments.filter(c => c._id !== commentId));\n      setCommentOptionsId(null);\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: localPost.userProfilePicture || defaultAvatar,\n        alt: localPost.user,\n        className: \"avatar\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = defaultAvatar;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: localPost.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(localPost.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-options\",\n        children: [/*#__PURE__*/_jsxDEV(MoreHorizontal, {\n          size: 20,\n          className: \"more-options\",\n          onClick: () => setShowPostOptions(!showPostOptions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), showPostOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditPost,\n            children: [/*#__PURE__*/_jsxDEV(Edit, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 62\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeletePost,\n            children: [/*#__PURE__*/_jsxDEV(Trash2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 64\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [localPost.title && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: localPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }, this), editingPost ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedContent,\n          onChange: e => setEditedContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdatePost,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingPost(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: localPost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(Heart, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this), \" \", localPost.likes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), \" \", comments.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Share2, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comments\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.userProfilePicture || defaultAvatar,\n          alt: comment.username,\n          className: \"avatar-small\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = defaultAvatar;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), editingComment === comment._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedContent,\n              onChange: e => setEditedContent(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdateComment(comment._id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingComment(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-options\",\n          children: [/*#__PURE__*/_jsxDEV(MoreHorizontal, {\n            size: 16,\n            onClick: () => setCommentOptionsId(comment._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), commentOptionsId === comment._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditComment(comment),\n              children: [/*#__PURE__*/_jsxDEV(Edit, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 88\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 94\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"eZRcISyTzhRMw9dx5gN2B0mlGWw=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Post.jsx"],"names":["React","useState","useEffect","Heart","MessageCircle","Share2","MoreHorizontal","Send","Edit","Trash2","axios","Post","post","onPostUpdate","onPostDelete","localPost","setLocalPost","comments","setComments","newComment","setNewComment","showPostOptions","setShowPostOptions","editingPost","setEditingPost","editingComment","setEditingComment","editedContent","setEditedContent","commentOptionsId","setCommentOptionsId","defaultAvatar","fetchComments","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","response","get","_id","data","error","console","handleAddComment","trim","user","JSON","parse","localStorage","getItem","content","userId","username","userProfilePicture","profilePicture","handleEditPost","handleUpdatePost","put","updatedPost","handleDeletePost","delete","handleEditComment","comment","handleUpdateComment","commentId","map","c","handleDeleteComment","filter","e","onerror","src","Date","createdAt","toLocaleString","title","value","likes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,cAAvC,EAAuDC,IAAvD,EAA6DC,IAA7D,EAAmEC,MAAnE,QAAiF,cAAjF;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAd,EAAoD;AAAA;;AAC/D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAACW,IAAD,CAA1C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACsB,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAAC0B,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC4B,gBAAD,EAAmBC,mBAAnB,IAA0C7B,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM8B,aAAa,GAAG,gCAAtB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,YAAY,CAACJ,IAAD,CAAZ;AACAoB,IAAAA,aAAa;AAChB,GAHQ,EAGN,CAACpB,IAAD,CAHM,CAAT;AAKAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM+B,kBAAkB,GAAIC,KAAD,IAAW;AAClC,UAAIL,gBAAgB,IAAI,CAACK,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqB,kBAArB,CAAzB,EAAmE;AAC/DN,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACJ,KAJD;;AAMAO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCL,kBAAnC;AACA,WAAO,MAAM;AACTI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCN,kBAAtC;AACH,KAFD;AAGH,GAXQ,EAWN,CAACJ,gBAAD,CAXM,CAAT;;AAaA,QAAMG,aAAa,GAAG,YAAY;AAC9B,QAAI;AACA,YAAMQ,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAN,CAAW,cAAa1B,SAAS,CAAC2B,GAAI,WAAtC,CAAvB;AACAxB,MAAAA,WAAW,CAACsB,QAAQ,CAACG,IAAV,CAAX;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;AACH;AACJ,GAPD;;AASA,QAAME,gBAAgB,GAAG,YAAY;AACjC,QAAI,CAAC3B,UAAU,CAAC4B,IAAX,EAAL,EAAwB;;AAExB,QAAI;AACA,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,YAAMZ,QAAQ,GAAG,MAAM9B,KAAK,CAACE,IAAN,CAAY,cAAaG,SAAS,CAAC2B,GAAI,WAAvC,EAAmD;AACtEW,QAAAA,OAAO,EAAElC,UAD6D;AAEtEmC,QAAAA,MAAM,EAAEN,IAAI,CAACN,GAFyD;AAGtEa,QAAAA,QAAQ,EAAEP,IAAI,CAACO,QAHuD;AAItEC,QAAAA,kBAAkB,EAAER,IAAI,CAACS,cAAL,IAAuB1B;AAJ2B,OAAnD,CAAvB;AAMAb,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcuB,QAAQ,CAACG,IAAvB,CAAD,CAAX;AACAvB,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH,KAVD,CAUE,OAAOwB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACH;AACJ,GAhBD;;AAkBA,QAAMc,cAAc,GAAG,MAAM;AACzBlC,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAI,IAAAA,gBAAgB,CAACb,SAAS,CAACsC,OAAX,CAAhB;AACA/B,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,GAJD;;AAMA,QAAMqC,gBAAgB,GAAG,YAAY;AACjC,QAAI;AACA,YAAMX,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,YAAMZ,QAAQ,GAAG,MAAM9B,KAAK,CAACkD,GAAN,CAAW,cAAa7C,SAAS,CAAC2B,GAAI,EAAtC,EAAyC;AAC5DW,QAAAA,OAAO,EAAE1B,aADmD;AAE5D2B,QAAAA,MAAM,EAAEN,IAAI,CAACN;AAF+C,OAAzC,CAAvB;AAIA,YAAMmB,WAAW,GAAGrB,QAAQ,CAACG,IAA7B;AACA3B,MAAAA,YAAY,CAAC6C,WAAD,CAAZ;;AACA,UAAI,OAAOhD,YAAP,KAAwB,UAA5B,EAAwC;AACpCA,QAAAA,YAAY,CAACgD,WAAD,CAAZ;AACH;;AACDrC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,KAbD,CAaE,OAAOgB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACH;AACJ,GAjBD;;AAmBA,QAAMkB,gBAAgB,GAAG,YAAY;AACjC,QAAI;AACA,YAAMd,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,YAAM1C,KAAK,CAACqD,MAAN,CAAc,cAAahD,SAAS,CAAC2B,GAAI,EAAzC,EAA4C;AAC9CC,QAAAA,IAAI,EAAE;AAAEW,UAAAA,MAAM,EAAEN,IAAI,CAACN;AAAf;AADwC,OAA5C,CAAN;;AAGA,UAAI,OAAO5B,YAAP,KAAwB,UAA5B,EAAwC;AACpCA,QAAAA,YAAY,CAACC,SAAS,CAAC2B,GAAX,CAAZ;AACH;AACJ,KARD,CAQE,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACH;AACJ,GAZD;;AAcA,QAAMoB,iBAAiB,GAAIC,OAAD,IAAa;AACnCvC,IAAAA,iBAAiB,CAACuC,OAAO,CAACvB,GAAT,CAAjB;AACAd,IAAAA,gBAAgB,CAACqC,OAAO,CAACZ,OAAT,CAAhB;AACAvB,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAJD;;AAMA,QAAMoC,mBAAmB,GAAG,MAAOC,SAAP,IAAqB;AAC7C,QAAI;AACA,YAAMnB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,YAAMZ,QAAQ,GAAG,MAAM9B,KAAK,CAACkD,GAAN,CAAW,cAAa7C,SAAS,CAAC2B,GAAI,aAAYyB,SAAU,EAA5D,EAA+D;AAClFd,QAAAA,OAAO,EAAE1B,aADyE;AAElF2B,QAAAA,MAAM,EAAEN,IAAI,CAACN;AAFqE,OAA/D,CAAvB;AAIAxB,MAAAA,WAAW,CAACD,QAAQ,CAACmD,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAAC3B,GAAF,KAAUyB,SAAV,GAAsB3B,QAAQ,CAACG,IAA/B,GAAsC0B,CAAxD,CAAD,CAAX;AACA3C,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAE,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,KATD,CASE,OAAOgB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH;AACJ,GAbD;;AAeA,QAAM0B,mBAAmB,GAAG,MAAOH,SAAP,IAAqB;AAC7C,QAAI;AACA,YAAMnB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,YAAM1C,KAAK,CAACqD,MAAN,CAAc,cAAahD,SAAS,CAAC2B,GAAI,aAAYyB,SAAU,EAA/D,EAAkE;AACpExB,QAAAA,IAAI,EAAE;AAAEW,UAAAA,MAAM,EAAEN,IAAI,CAACN;AAAf;AAD8D,OAAlE,CAAN;AAGAxB,MAAAA,WAAW,CAACD,QAAQ,CAACsD,MAAT,CAAgBF,CAAC,IAAIA,CAAC,CAAC3B,GAAF,KAAUyB,SAA/B,CAAD,CAAX;AACArC,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,KAPD,CAOE,OAAOc,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH;AACJ,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AACI,QAAA,GAAG,EAAE7B,SAAS,CAACyC,kBAAV,IAAgCzB,aADzC;AAEI,QAAA,GAAG,EAAEhB,SAAS,CAACiC,IAFnB;AAGI,QAAA,SAAS,EAAC,QAHd;AAII,QAAA,OAAO,EAAGwB,CAAD,IAAO;AAAEA,UAAAA,CAAC,CAACrC,MAAF,CAASsC,OAAT,GAAmB,IAAnB;AAAyBD,UAAAA,CAAC,CAACrC,MAAF,CAASuC,GAAT,GAAe3C,aAAf;AAA+B;AAJ9E;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAA,oBAAKhB,SAAS,CAACiC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAO,IAAI2B,IAAJ,CAAS5D,SAAS,CAAC6D,SAAnB,EAA8BC,cAA9B;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,EAAtB;AAA0B,UAAA,SAAS,EAAC,cAApC;AAAmD,UAAA,OAAO,EAAE,MAAMvD,kBAAkB,CAAC,CAACD,eAAF;AAApF;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKA,eAAe,iBACZ;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACI;AAAQ,YAAA,OAAO,EAAEqC,cAAjB;AAAA,oCAAiC,QAAC,IAAD;AAAM,cAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,OAAO,EAAEI,gBAAjB;AAAA,oCAAmC,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAsBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACK/C,SAAS,CAAC+D,KAAV,iBAAmB;AAAA,kBAAK/D,SAAS,CAAC+D;AAAf;AAAA;AAAA;AAAA;AAAA,cADxB,EAEKvD,WAAW,gBACR;AAAA,gCACI;AACI,UAAA,KAAK,EAAEI,aADX;AAEI,UAAA,QAAQ,EAAG6C,CAAD,IAAO5C,gBAAgB,CAAC4C,CAAC,CAACrC,MAAF,CAAS4C,KAAV;AAFrC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAQ,UAAA,OAAO,EAAEpB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,OAAO,EAAE,MAAMnC,cAAc,CAAC,KAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,gBAUR;AAAA,kBAAIT,SAAS,CAACsC;AAAd;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAqCI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAA,gCAAQ,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAR,OAA6BtC,SAAS,CAACiE,KAAV,CAAgBC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAQ,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,gBAAR,OAAqChE,QAAQ,CAACgE,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,+BAAQ,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArCJ,eA0CI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKhE,QAAQ,CAACmD,GAAT,CAAcH,OAAD,iBACV;AAAuB,QAAA,SAAS,EAAC,SAAjC;AAAA,gCACI;AACI,UAAA,GAAG,EAAEA,OAAO,CAACT,kBAAR,IAA8BzB,aADvC;AAEI,UAAA,GAAG,EAAEkC,OAAO,CAACV,QAFjB;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,OAAO,EAAGiB,CAAD,IAAO;AAAEA,YAAAA,CAAC,CAACrC,MAAF,CAASsC,OAAT,GAAmB,IAAnB;AAAyBD,YAAAA,CAAC,CAACrC,MAAF,CAASuC,GAAT,GAAe3C,aAAf;AAA+B;AAJ9E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAA,sBAASkC,OAAO,CAACV;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK9B,cAAc,KAAKwC,OAAO,CAACvB,GAA3B,gBACG;AAAA,oCACI;AACI,cAAA,KAAK,EAAEf,aADX;AAEI,cAAA,QAAQ,EAAG6C,CAAD,IAAO5C,gBAAgB,CAAC4C,CAAC,CAACrC,MAAF,CAAS4C,KAAV;AAFrC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAQ,cAAA,OAAO,EAAE,MAAMb,mBAAmB,CAACD,OAAO,CAACvB,GAAT,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAQ,cAAA,OAAO,EAAE,MAAMhB,iBAAiB,CAAC,IAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,gBAUG;AAAA,sBAAIuC,OAAO,CAACZ;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAZR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAsBI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAE,EAAtB;AAA0B,YAAA,OAAO,EAAE,MAAMvB,mBAAmB,CAACmC,OAAO,CAACvB,GAAT;AAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKb,gBAAgB,KAAKoC,OAAO,CAACvB,GAA7B,iBACG;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACI;AAAQ,cAAA,OAAO,EAAE,MAAMsB,iBAAiB,CAACC,OAAD,CAAxC;AAAA,sCAAmD,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAE,MAAMK,mBAAmB,CAACL,OAAO,CAACvB,GAAT,CAA1C;AAAA,sCAAyD,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,sBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBJ;AAAA,SAAUuB,OAAO,CAACvB,GAAlB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YA1CJ,eA8EI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,oBAFhB;AAGI,QAAA,KAAK,EAAEvB,UAHX;AAII,QAAA,QAAQ,EAAGqD,CAAD,IAAOpD,aAAa,CAACoD,CAAC,CAACrC,MAAF,CAAS4C,KAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAQ,QAAA,OAAO,EAAEjC,gBAAjB;AAAA,+BAAmC,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA9EJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0FH;;GA3NuBnC,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './css/Post.css';\r\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2 } from 'lucide-react';\r\nimport axios from '../axios';\r\n\r\nexport default function Post({ post, onPostUpdate, onPostDelete }) {\r\n    const [localPost, setLocalPost] = useState(post);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [showPostOptions, setShowPostOptions] = useState(false);\r\n    const [editingPost, setEditingPost] = useState(false);\r\n    const [editingComment, setEditingComment] = useState(null);\r\n    const [editedContent, setEditedContent] = useState('');\r\n    const [commentOptionsId, setCommentOptionsId] = useState(null);\r\n    const defaultAvatar = \"https://via.placeholder.com/40\";\r\n\r\n    useEffect(() => {\r\n        setLocalPost(post);\r\n        fetchComments();\r\n    }, [post]);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (commentOptionsId && !event.target.closest('.comment-options')) {\r\n                setCommentOptionsId(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside);\r\n        };\r\n    }, [commentOptionsId]);\r\n\r\n    const fetchComments = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/posts/${localPost._id}/comments`);\r\n            setComments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddComment = async () => {\r\n        if (!newComment.trim()) return;\r\n\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\r\n                content: newComment,\r\n                userId: user._id,\r\n                username: user.username,\r\n                userProfilePicture: user.profilePicture || defaultAvatar\r\n            });\r\n            setComments([...comments, response.data]);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditPost = () => {\r\n        setEditingPost(true);\r\n        setEditedContent(localPost.content);\r\n        setShowPostOptions(false);\r\n    };\r\n\r\n    const handleUpdatePost = async () => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.put(`/api/posts/${localPost._id}`, {\r\n                content: editedContent,\r\n                userId: user._id\r\n            });\r\n            const updatedPost = response.data;\r\n            setLocalPost(updatedPost);\r\n            if (typeof onPostUpdate === 'function') {\r\n                onPostUpdate(updatedPost);\r\n            }\r\n            setEditingPost(false);\r\n            setEditedContent('');\r\n        } catch (error) {\r\n            console.error('Error updating post:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeletePost = async () => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            await axios.delete(`/api/posts/${localPost._id}`, {\r\n                data: { userId: user._id }\r\n            });\r\n            if (typeof onPostDelete === 'function') {\r\n                onPostDelete(localPost._id);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditComment = (comment) => {\r\n        setEditingComment(comment._id);\r\n        setEditedContent(comment.content);\r\n        setCommentOptionsId(null);\r\n    };\r\n\r\n    const handleUpdateComment = async (commentId) => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\r\n                content: editedContent,\r\n                userId: user._id\r\n            });\r\n            setComments(comments.map(c => c._id === commentId ? response.data : c));\r\n            setEditingComment(null);\r\n            setEditedContent('');\r\n        } catch (error) {\r\n            console.error('Error updating comment:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\r\n                data: { userId: user._id }\r\n            });\r\n            setComments(comments.filter(c => c._id !== commentId));\r\n            setCommentOptionsId(null);\r\n        } catch (error) {\r\n            console.error('Error deleting comment:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post-header\">\r\n                <img \r\n                    src={localPost.userProfilePicture || defaultAvatar} \r\n                    alt={localPost.user} \r\n                    className=\"avatar\" \r\n                    onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\r\n                />\r\n                <div className=\"post-info\">\r\n                    <h3>{localPost.user}</h3>\r\n                    <span>{new Date(localPost.createdAt).toLocaleString()}</span>\r\n                </div>\r\n                <div className=\"post-options\">\r\n                    <MoreHorizontal size={20} className=\"more-options\" onClick={() => setShowPostOptions(!showPostOptions)} />\r\n                    {showPostOptions && (\r\n                        <div className=\"options-dropdown\">\r\n                            <button onClick={handleEditPost}><Edit size={16} /> Edit</button>\r\n                            <button onClick={handleDeletePost}><Trash2 size={16} /> Delete</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"post-content\">\r\n                {localPost.title && <h4>{localPost.title}</h4>}\r\n                {editingPost ? (\r\n                    <div>\r\n                        <textarea\r\n                            value={editedContent}\r\n                            onChange={(e) => setEditedContent(e.target.value)}\r\n                        />\r\n                        <button onClick={handleUpdatePost}>Save</button>\r\n                        <button onClick={() => setEditingPost(false)}>Cancel</button>\r\n                    </div>\r\n                ) : (\r\n                    <p>{localPost.content}</p>\r\n                )}\r\n            </div>\r\n            <div className=\"post-actions\">\r\n                <button><Heart size={20} /> {localPost.likes.length}</button>\r\n                <button><MessageCircle size={20} /> {comments.length}</button>\r\n                <button><Share2 size={20} /></button>\r\n            </div>\r\n            <div className=\"post-comments\">\r\n                {comments.map((comment) => (\r\n                    <div key={comment._id} className=\"comment\">\r\n                        <img \r\n                            src={comment.userProfilePicture || defaultAvatar} \r\n                            alt={comment.username} \r\n                            className=\"avatar-small\" \r\n                            onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\r\n                        />\r\n                        <div className=\"comment-content\">\r\n                            <strong>{comment.username}</strong>\r\n                            {editingComment === comment._id ? (\r\n                                <div>\r\n                                    <textarea\r\n                                        value={editedContent}\r\n                                        onChange={(e) => setEditedContent(e.target.value)}\r\n                                    />\r\n                                    <button onClick={() => handleUpdateComment(comment._id)}>Save</button>\r\n                                    <button onClick={() => setEditingComment(null)}>Cancel</button>\r\n                                </div>\r\n                            ) : (\r\n                                <p>{comment.content}</p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"comment-options\">\r\n                            <MoreHorizontal size={16} onClick={() => setCommentOptionsId(comment._id)} />\r\n                            {commentOptionsId === comment._id && (\r\n                                <div className=\"options-dropdown\">\r\n                                    <button onClick={() => handleEditComment(comment)}><Edit size={14} /> Edit</button>\r\n                                    <button onClick={() => handleDeleteComment(comment._id)}><Trash2 size={14} /> Delete</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"post-comment-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Write a comment...\"\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                />\r\n                <button onClick={handleAddComment}><Send size={20} /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}