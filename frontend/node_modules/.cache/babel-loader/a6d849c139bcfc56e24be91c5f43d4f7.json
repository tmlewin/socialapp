{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080' // or whatever your API base URL is\n\n});\ninstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Clear token and user data from localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user'); // Redirect to login page\n\n    window.location.href = '/login';\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/axios.js"],"names":["axios","instance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","removeItem","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB,CACQ;;AADR,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACKC,MAAD,IAAY;AACR,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACI,OAAP,CAAe,eAAf,IAAmC,UAASH,KAAM,EAAlD;AACH;;AACD,SAAOD,MAAP;AACH,CAPL,EAQKK,KAAD,IAAW;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVL;AAaAX,QAAQ,CAACG,YAAT,CAAsBW,QAAtB,CAA+BT,GAA/B,CACKS,QAAD,IAAcA,QADlB,EAEKH,KAAD,IAAW;AACP,MAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACjD;AACAP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AACAR,IAAAA,YAAY,CAACQ,UAAb,CAAwB,MAAxB,EAHiD,CAIjD;;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;;AACD,SAAOP,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAXL;AAcA,eAAeX,QAAf","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:8080'  // or whatever your API base URL is\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\ninstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response && error.response.status === 401) {\n            // Clear token and user data from localStorage\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            // Redirect to login page\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}