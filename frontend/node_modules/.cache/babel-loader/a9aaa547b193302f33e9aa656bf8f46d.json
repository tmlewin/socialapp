{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './css/Post.css';\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2 } from 'lucide-react';\nimport axios from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  onPostUpdate,\n  onPostDelete\n}) {\n  _s();\n\n  console.log('Post props:', {\n    post,\n    onPostUpdate,\n    onPostDelete\n  }); // Add this line for debugging\n\n  const [localPost, setLocalPost] = useState(post);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [showPostOptions, setShowPostOptions] = useState(false);\n  const [editingPost, setEditingPost] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [commentOptionsId, setCommentOptionsId] = useState(null);\n  const defaultAvatar = \"https://via.placeholder.com/40\";\n  const [userProfilePicture, setUserProfilePicture] = useState(post.userProfilePicture || defaultAvatar);\n  useEffect(() => {\n    setLocalPost(post);\n    fetchComments();\n  }, [post]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (commentOptionsId && !event.target.closest('.comment-options')) {\n        setCommentOptionsId(null);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [commentOptionsId]);\n  useEffect(() => {\n    const fetchLatestProfilePicture = async () => {\n      try {\n        const response = await axios.get(`/api/users/${post.userId}/profile-picture`);\n        setUserProfilePicture(response.data.profilePicture || defaultAvatar);\n      } catch (error) {\n        console.error('Error fetching latest profile picture:', error);\n      }\n    };\n\n    fetchLatestProfilePicture();\n  }, [post.userId]);\n  const fetchComments = useCallback(async () => {\n    try {\n      const response = await axios.get(`/api/posts/${localPost._id}/comments`);\n      setComments(response.data);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  }, [localPost._id]);\n\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\n        content: newComment,\n        userId: user._id,\n        username: user.username\n      });\n      const updatedComments = await axios.get(`/api/posts/${localPost._id}/comments`);\n      setComments(updatedComments.data);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  const handleEditPost = () => {\n    setEditingPost(true);\n    setEditedContent(localPost.content);\n    setShowPostOptions(false);\n  };\n\n  const handleUpdatePost = async () => {\n    console.log('Attempting to update post:', localPost._id); // Add this line\n\n    try {\n      const response = await axios.put(`/api/posts/${localPost._id}`, {\n        content: editedContent,\n        userId: localPost.userId\n      });\n      setLocalPost(response.data);\n      setEditingPost(false);\n      console.log('Post updated successfully:', response.data); // Add this line\n\n      if (typeof onPostUpdate === 'function') {\n        onPostUpdate(response.data);\n      } else {\n        console.warn('onPostUpdate is not a function:', onPostUpdate);\n      }\n    } catch (error) {\n      console.error('Error updating post:', error);\n\n      if (error.response && error.response.status === 403) {\n        alert('You do not have permission to edit this post.');\n      } else {\n        console.error('An error occurred while updating the post:', error);\n      }\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await axios.delete(`/api/posts/${localPost._id}`, {\n        data: {\n          userId: user._id\n        }\n      });\n\n      if (typeof onPostDelete === 'function') {\n        onPostDelete(localPost._id);\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  const handleEditComment = comment => {\n    setEditingComment(comment._id);\n    setEditedContent(comment.content);\n    setCommentOptionsId(null);\n  };\n\n  const handleUpdateComment = async commentId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\n        content: editedContent,\n        userId: user._id\n      });\n      setComments(comments.map(c => c._id === commentId ? response.data : c));\n      setEditingComment(null);\n      setEditedContent('');\n    } catch (error) {\n      console.error('Error updating comment:', error);\n    }\n  };\n\n  const handleDeleteComment = async commentId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\n        data: {\n          userId: user._id\n        }\n      });\n      setComments(comments.filter(c => c._id !== commentId));\n      setCommentOptionsId(null);\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfilePicture,\n        alt: localPost.user,\n        className: \"avatar\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = defaultAvatar;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: localPost.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(localPost.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), post.threadTitle && /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"thread-title\",\n        children: post.threadTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-options\",\n        children: [/*#__PURE__*/_jsxDEV(MoreHorizontal, {\n          size: 20,\n          className: \"more-options\",\n          onClick: () => setShowPostOptions(!showPostOptions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), showPostOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditPost,\n            children: [/*#__PURE__*/_jsxDEV(Edit, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 62\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeletePost,\n            children: [/*#__PURE__*/_jsxDEV(Trash2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 64\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [localPost.title && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: localPost.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }, this), editingPost ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedContent,\n          onChange: e => setEditedContent(e.target.value),\n          className: \"edit-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdatePost,\n            className: \"btn btn-save\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingPost(false);\n              setEditedContent('');\n            },\n            className: \"btn btn-cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: localPost.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(Heart, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), \" \", localPost.likes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), \" \", comments.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Share2, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comments\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.userProfilePicture || defaultAvatar,\n          alt: comment.username,\n          className: \"avatar-small\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = defaultAvatar;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), editingComment === comment._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-comment-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedContent,\n              onChange: e => setEditedContent(e.target.value),\n              className: \"edit-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdateComment(comment._id),\n                className: \"btn btn-save\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setEditingComment(null);\n                  setEditedContent('');\n                },\n                className: \"btn btn-cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-options\",\n          children: [/*#__PURE__*/_jsxDEV(MoreHorizontal, {\n            size: 16,\n            onClick: () => setCommentOptionsId(comment._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this), commentOptionsId === comment._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditComment(comment),\n              children: [/*#__PURE__*/_jsxDEV(Edit, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 88\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 94\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            handleAddComment();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"U/ATLiwa7wJWby4YWTi9iNpCtLk=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Post.jsx"],"names":["React","useState","useEffect","useCallback","Heart","MessageCircle","Share2","MoreHorizontal","Send","Edit","Trash2","axios","Post","post","onPostUpdate","onPostDelete","console","log","localPost","setLocalPost","comments","setComments","newComment","setNewComment","showPostOptions","setShowPostOptions","editingPost","setEditingPost","editingComment","setEditingComment","editedContent","setEditedContent","commentOptionsId","setCommentOptionsId","defaultAvatar","userProfilePicture","setUserProfilePicture","fetchComments","handleClickOutside","event","target","closest","document","addEventListener","removeEventListener","fetchLatestProfilePicture","response","get","userId","data","profilePicture","error","_id","handleAddComment","trim","user","JSON","parse","localStorage","getItem","content","username","updatedComments","handleEditPost","handleUpdatePost","put","warn","status","alert","handleDeletePost","delete","handleEditComment","comment","handleUpdateComment","commentId","map","c","handleDeleteComment","filter","e","onerror","src","Date","createdAt","toLocaleString","threadTitle","title","value","likes","length","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './css/Post.css';\r\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2 } from 'lucide-react';\r\nimport axios from '../axios';\r\n\r\nexport default function Post({ post, onPostUpdate, onPostDelete }) {\r\n    console.log('Post props:', { post, onPostUpdate, onPostDelete }); // Add this line for debugging\r\n\r\n    const [localPost, setLocalPost] = useState(post);\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [showPostOptions, setShowPostOptions] = useState(false);\r\n    const [editingPost, setEditingPost] = useState(false);\r\n    const [editingComment, setEditingComment] = useState(null);\r\n    const [editedContent, setEditedContent] = useState('');\r\n    const [commentOptionsId, setCommentOptionsId] = useState(null);\r\n    const defaultAvatar = \"https://via.placeholder.com/40\";\r\n\r\n    const [userProfilePicture, setUserProfilePicture] = useState(post.userProfilePicture || defaultAvatar);\r\n\r\n    useEffect(() => {\r\n        setLocalPost(post);\r\n        fetchComments();\r\n    }, [post]);\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (commentOptionsId && !event.target.closest('.comment-options')) {\r\n                setCommentOptionsId(null);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('click', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutside);\r\n        };\r\n    }, [commentOptionsId]);\r\n\r\n    useEffect(() => {\r\n        const fetchLatestProfilePicture = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/users/${post.userId}/profile-picture`);\r\n                setUserProfilePicture(response.data.profilePicture || defaultAvatar);\r\n            } catch (error) {\r\n                console.error('Error fetching latest profile picture:', error);\r\n            }\r\n        };\r\n\r\n        fetchLatestProfilePicture();\r\n    }, [post.userId]);\r\n\r\n    const fetchComments = useCallback(async () => {\r\n        try {\r\n            const response = await axios.get(`/api/posts/${localPost._id}/comments`);\r\n            setComments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n        }\r\n    }, [localPost._id]);\r\n\r\n    const handleAddComment = async () => {\r\n        if (!newComment.trim()) return;\r\n\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\r\n                content: newComment,\r\n                userId: user._id,\r\n                username: user.username\r\n            });\r\n            const updatedComments = await axios.get(`/api/posts/${localPost._id}/comments`);\r\n            setComments(updatedComments.data);\r\n            setNewComment('');\r\n        } catch (error) {\r\n            console.error('Error adding comment:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditPost = () => {\r\n        setEditingPost(true);\r\n        setEditedContent(localPost.content);\r\n        setShowPostOptions(false);\r\n    };\r\n\r\n    const handleUpdatePost = async () => {\r\n        console.log('Attempting to update post:', localPost._id); // Add this line\r\n        try {\r\n            const response = await axios.put(`/api/posts/${localPost._id}`, {\r\n                content: editedContent,\r\n                userId: localPost.userId\r\n            });\r\n            setLocalPost(response.data);\r\n            setEditingPost(false);\r\n            console.log('Post updated successfully:', response.data); // Add this line\r\n            if (typeof onPostUpdate === 'function') {\r\n                onPostUpdate(response.data);\r\n            } else {\r\n                console.warn('onPostUpdate is not a function:', onPostUpdate);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating post:', error);\r\n            if (error.response && error.response.status === 403) {\r\n                alert('You do not have permission to edit this post.');\r\n            } else {\r\n                console.error('An error occurred while updating the post:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeletePost = async () => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            await axios.delete(`/api/posts/${localPost._id}`, {\r\n                data: { userId: user._id }\r\n            });\r\n            if (typeof onPostDelete === 'function') {\r\n                onPostDelete(localPost._id);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error deleting post:', error);\r\n        }\r\n    };\r\n\r\n    const handleEditComment = (comment) => {\r\n        setEditingComment(comment._id);\r\n        setEditedContent(comment.content);\r\n        setCommentOptionsId(null);\r\n    };\r\n\r\n    const handleUpdateComment = async (commentId) => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\r\n                content: editedContent,\r\n                userId: user._id\r\n            });\r\n            setComments(comments.map(c => c._id === commentId ? response.data : c));\r\n            setEditingComment(null);\r\n            setEditedContent('');\r\n        } catch (error) {\r\n            console.error('Error updating comment:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeleteComment = async (commentId) => {\r\n        try {\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\r\n                data: { userId: user._id }\r\n            });\r\n            setComments(comments.filter(c => c._id !== commentId));\r\n            setCommentOptionsId(null);\r\n        } catch (error) {\r\n            console.error('Error deleting comment:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post-header\">\r\n                <img \r\n                    src={userProfilePicture} \r\n                    alt={localPost.user} \r\n                    className=\"avatar\" \r\n                    onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\r\n                />\r\n                <div className=\"post-info\">\r\n                    <h3>{localPost.user}</h3>\r\n                    <span>{new Date(localPost.createdAt).toLocaleString()}</span>\r\n                </div>\r\n                {post.threadTitle && <h4 className=\"thread-title\">{post.threadTitle}</h4>}\r\n                <div className=\"post-options\">\r\n                    <MoreHorizontal size={20} className=\"more-options\" onClick={() => setShowPostOptions(!showPostOptions)} />\r\n                    {showPostOptions && (\r\n                        <div className=\"options-dropdown\">\r\n                            <button onClick={handleEditPost}><Edit size={16} /> Edit</button>\r\n                            <button onClick={handleDeletePost}><Trash2 size={16} /> Delete</button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"post-content\">\r\n                {localPost.title && <h4>{localPost.title}</h4>}\r\n                {editingPost ? (\r\n                    <div className=\"edit-post-container\">\r\n                        <textarea\r\n                            value={editedContent}\r\n                            onChange={(e) => setEditedContent(e.target.value)}\r\n                            className=\"edit-textarea\"\r\n                        />\r\n                        <div className=\"edit-buttons\">\r\n                            <button onClick={handleUpdatePost} className=\"btn btn-save\">Save</button>\r\n                            <button onClick={() => {\r\n                                setEditingPost(false);\r\n                                setEditedContent('');\r\n                            }} className=\"btn btn-cancel\">Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <p>{localPost.content}</p>\r\n                )}\r\n            </div>\r\n            <div className=\"post-actions\">\r\n                <button><Heart size={20} /> {localPost.likes.length}</button>\r\n                <button><MessageCircle size={20} /> {comments.length}</button>\r\n                <button><Share2 size={20} /></button>\r\n            </div>\r\n            <div className=\"post-comments\">\r\n                {comments.map((comment) => (\r\n                    <div key={comment._id} className=\"comment\">\r\n                        <img \r\n                            src={comment.userProfilePicture || defaultAvatar} \r\n                            alt={comment.username} \r\n                            className=\"avatar-small\" \r\n                            onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\r\n                        />\r\n                        <div className=\"comment-content\">\r\n                            <strong>{comment.username}</strong>\r\n                            {editingComment === comment._id ? (\r\n                                <div className=\"edit-comment-container\">\r\n                                    <textarea\r\n                                        value={editedContent}\r\n                                        onChange={(e) => setEditedContent(e.target.value)}\r\n                                        className=\"edit-textarea\"\r\n                                    />\r\n                                    <div className=\"edit-buttons\">\r\n                                        <button onClick={() => handleUpdateComment(comment._id)} className=\"btn btn-save\">Save</button>\r\n                                        <button onClick={() => {\r\n                                            setEditingComment(null);\r\n                                            setEditedContent('');\r\n                                        }} className=\"btn btn-cancel\">Cancel</button>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <p>{comment.content}</p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"comment-options\">\r\n                            <MoreHorizontal size={16} onClick={() => setCommentOptionsId(comment._id)} />\r\n                            {commentOptionsId === comment._id && (\r\n                                <div className=\"options-dropdown\">\r\n                                    <button onClick={() => handleEditComment(comment)}><Edit size={14} /> Edit</button>\r\n                                    <button onClick={() => handleDeleteComment(comment._id)}><Trash2 size={14} /> Delete</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"post-comment-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Write a comment...\"\r\n                    value={newComment}\r\n                    onChange={(e) => setNewComment(e.target.value)}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            e.preventDefault();\r\n                            handleAddComment();\r\n                        }\r\n                    }}\r\n                />\r\n                <button onClick={handleAddComment}><Send size={20} /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}