{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\CreatePost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from '../axios';\nimport './css/CreatePost.css';\nimport { Share2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePost({\n  onPostCreated,\n  threadId\n}) {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      let response;\n\n      if (threadId) {\n        // Creating a post in an existing thread\n        response = await axios.post('/api/posts', {\n          title,\n          content,\n          userId: user._id,\n          user: user.username,\n          userProfilePicture: user.profilePicture || \"https://via.placeholder.com/40\",\n          threadId\n        });\n      } else {\n        // Creating a new thread\n        response = await axios.post('/api/threads', {\n          title,\n          userId: user._id,\n          user: user.username\n        });\n      }\n\n      onPostCreated(response.data);\n      setTitle('');\n      setContent('');\n    } catch (error) {\n      console.error('Error creating post/thread:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: threadId ? \"Create a Post\" : \"Create a New Thread\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: threadId ? \"Post Title\" : \"Thread Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), threadId && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"What's on your mind?\",\n        value: content,\n        onChange: e => setContent(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Share2, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"post-button\",\n          style: {\n            backgroundColor: 'black',\n            color: 'white'\n          },\n          children: threadId ? \"Post\" : \"Create Thread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"OTvljkGZ3oDHjpEqZRGoAyVoe2c=\");\n\n_c = CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/CreatePost.jsx"],"names":["React","useState","axios","Share2","CreatePost","onPostCreated","threadId","title","setTitle","content","setContent","handleSubmit","e","preventDefault","user","JSON","parse","localStorage","getItem","response","post","userId","_id","username","userProfilePicture","profilePicture","data","error","console","target","value","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from '../axios';\nimport './css/CreatePost.css';\nimport { Share2 } from 'lucide-react';\n\nexport default function CreatePost({ onPostCreated, threadId }) {\n    const [title, setTitle] = useState('');\n    const [content, setContent] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const user = JSON.parse(localStorage.getItem('user'));\n            let response;\n            \n            if (threadId) {\n                // Creating a post in an existing thread\n                response = await axios.post('/api/posts', {\n                    title,\n                    content,\n                    userId: user._id,\n                    user: user.username,\n                    userProfilePicture: user.profilePicture || \"https://via.placeholder.com/40\",\n                    threadId\n                });\n            } else {\n                // Creating a new thread\n                response = await axios.post('/api/threads', {\n                    title,\n                    userId: user._id,\n                    user: user.username\n                });\n            }\n            \n            onPostCreated(response.data);\n            setTitle('');\n            setContent('');\n        } catch (error) {\n            console.error('Error creating post/thread:', error);\n        }\n    };\n\n    return (\n        <div className=\"create-post\">\n            <h2>{threadId ? \"Create a Post\" : \"Create a New Thread\"}</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder={threadId ? \"Post Title\" : \"Thread Title\"}\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    required\n                />\n                {threadId && (\n                    <textarea\n                        placeholder=\"What's on your mind?\"\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                        required\n                    />\n                )}\n                <div className=\"post-actions\">\n                    <Share2 size={20} />\n                    <button type=\"submit\" className=\"post-button\" style={{ backgroundColor: 'black', color: 'white' }}>\n                        {threadId ? \"Post\" : \"Create Thread\"}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}