{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080/\"\n});\ninstance.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    config.headers['Authorization'] = `Bearer ${user.token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/axios.js"],"names":["axios","instance","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","error","Promise","reject","response","status","removeItem","window","location","href"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE;AADiB,CAAb,CAAjB;AAIAF,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACKC,MAAD,IAAY;AACR,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,MAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAjB,EAAwB;AACpBN,IAAAA,MAAM,CAACO,OAAP,CAAe,eAAf,IAAmC,UAASN,IAAI,CAACK,KAAM,EAAvD;AACH;;AACD,SAAON,MAAP;AACH,CAPL,EAQKQ,KAAD,IAAW;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVL;AAaAd,QAAQ,CAACG,YAAT,CAAsBc,QAAtB,CAA+BZ,GAA/B,CACKY,QAAD,IAAcA,QADlB,EAEKH,KAAD,IAAW;AACP,MAAIA,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACjDR,IAAAA,YAAY,CAACS,UAAb,CAAwB,MAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;;AACD,SAAOP,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARL;AAWA,eAAed,QAAf","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"http://localhost:8080/\",\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user && user.token) {\n            config.headers['Authorization'] = `Bearer ${user.token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\ninstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response && error.response.status === 401) {\n            localStorage.removeItem('user');\n            window.location.href = '/login';\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}