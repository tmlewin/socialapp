{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\ComposeMessage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport axios from '../axios';\nimport './css/ComposeMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComposeMessage() {\n  _s();\n\n  const [recipientUsername, setRecipientUsername] = useState('');\n  const [subject, setSubject] = useState('');\n  const [content, setContent] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const token = localStorage.getItem('token');\n\n      if (!token) {\n        console.error('No token found');\n        alert('You must be logged in to send messages.');\n        return;\n      }\n\n      const username = recipientUsername.replace('@', ''); // Remove @ if present\n\n      console.log('Fetching user:', username);\n      const recipientResponse = await axios.get(`/api/users/by-username/${username}`);\n      console.log('Recipient response:', recipientResponse.data);\n      const recipientId = recipientResponse.data._id;\n      console.log('Sending message to:', recipientId);\n      const messageResponse = await axios.post('/api/messages', {\n        recipientId,\n        subject,\n        content\n      });\n      console.log('Message sent:', messageResponse.data);\n      alert('Message sent successfully!');\n      setRecipientUsername('');\n      setSubject('');\n      setContent('');\n    } catch (error) {\n      console.error('Error sending message:', error.response ? error.response.data : error.message);\n\n      if (error.response && error.response.status === 404) {\n        alert('User not found. Please check the username and try again.');\n      } else {\n        alert('Failed to send message. Please try again.');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compose-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Compose New Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipient Username\",\n        value: recipientUsername,\n        onChange: e => setRecipientUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Subject\",\n        value: subject,\n        onChange: e => setSubject(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: content,\n        onChange: setContent,\n        placeholder: \"Write your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ComposeMessage, \"8OcLyNi7Sr+BNQB9ENUFycatmkk=\");\n\n_c = ComposeMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComposeMessage\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/ComposeMessage.jsx"],"names":["React","useState","ReactQuill","axios","ComposeMessage","recipientUsername","setRecipientUsername","subject","setSubject","content","setContent","handleSubmit","e","preventDefault","token","localStorage","getItem","console","error","alert","username","replace","log","recipientResponse","get","data","recipientId","_id","messageResponse","post","response","message","status","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport axios from '../axios';\r\nimport './css/ComposeMessage.css';\r\n\r\nexport default function ComposeMessage() {\r\n    const [recipientUsername, setRecipientUsername] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                console.error('No token found');\r\n                alert('You must be logged in to send messages.');\r\n                return;\r\n            }\r\n\r\n            const username = recipientUsername.replace('@', ''); // Remove @ if present\r\n            console.log('Fetching user:', username);\r\n            const recipientResponse = await axios.get(`/api/users/by-username/${username}`);\r\n            console.log('Recipient response:', recipientResponse.data);\r\n            const recipientId = recipientResponse.data._id;\r\n            console.log('Sending message to:', recipientId);\r\n            const messageResponse = await axios.post('/api/messages', { recipientId, subject, content });\r\n            console.log('Message sent:', messageResponse.data);\r\n            alert('Message sent successfully!');\r\n            setRecipientUsername('');\r\n            setSubject('');\r\n            setContent('');\r\n        } catch (error) {\r\n            console.error('Error sending message:', error.response ? error.response.data : error.message);\r\n            if (error.response && error.response.status === 404) {\r\n                alert('User not found. Please check the username and try again.');\r\n            } else {\r\n                alert('Failed to send message. Please try again.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"compose-message\">\r\n            <h3>Compose New Message</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Recipient Username\"\r\n                    value={recipientUsername}\r\n                    onChange={(e) => setRecipientUsername(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Subject\"\r\n                    value={subject}\r\n                    onChange={(e) => setSubject(e.target.value)}\r\n                    required\r\n                />\r\n                <ReactQuill\r\n                    theme=\"snow\"\r\n                    value={content}\r\n                    onChange={setContent}\r\n                    placeholder=\"Write your message here...\"\r\n                />\r\n                <button type=\"submit\">Send Message</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}