{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from '../axios';\nimport { updateContext } from '../context/updateContext';\nimport Post from './Post';\nimport SearchBar from './SearchBar';\nimport './css/Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState([]);\n  const [updater, setUpdater] = useContext(updateContext);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('/api/posts');\n        setPosts(response.data);\n        setFilteredPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, [updater]);\n\n  const handleSearch = async searchTerm => {\n    try {\n      const response = await axios.get(`/api/posts/search?q=${searchTerm}`);\n      setFilteredPosts(response.data);\n    } catch (error) {\n      console.error(\"Error searching posts:\", error);\n    }\n  };\n\n  const handlePostUpdate = updatedPost => {\n    setPosts(prevPosts => {\n      const updatedPosts = prevPosts.map(post => post._id === updatedPost._id ? updatedPost : post);\n      return updatedPosts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    });\n  };\n\n  const handlePostDelete = deletedPostId => {\n    setPosts(prevPosts => prevPosts.filter(post => post._id !== deletedPostId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onPostUpdate: handlePostUpdate,\n      onPostDelete: handlePostDelete\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"YWyPww1kKa9o6bgtTqMNupaJ4Gw=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Feed.jsx"],"names":["React","useState","useEffect","useContext","axios","updateContext","Post","SearchBar","Feed","posts","setPosts","filteredPosts","setFilteredPosts","updater","setUpdater","fetchPosts","response","get","data","error","console","handleSearch","searchTerm","handlePostUpdate","updatedPost","prevPosts","updatedPosts","map","post","_id","sort","a","b","Date","createdAt","handlePostDelete","deletedPostId","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBX,UAAU,CAACE,aAAD,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,UAAU,GAAG,YAAY;AAC3B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,YAAV,CAAvB;AACAP,QAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR;AACAN,QAAAA,gBAAgB,CAACI,QAAQ,CAACE,IAAV,CAAhB;AACH,OAJD,CAIE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACH;AACJ,KARD;;AASAJ,IAAAA,UAAU;AACb,GAXQ,EAWN,CAACF,OAAD,CAXM,CAAT;;AAaA,QAAMQ,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACvC,QAAI;AACA,YAAMN,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,uBAAsBK,UAAW,EAA5C,CAAvB;AACAV,MAAAA,gBAAgB,CAACI,QAAQ,CAACE,IAAV,CAAhB;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACH;AACJ,GAPD;;AASA,QAAMI,gBAAgB,GAAIC,WAAD,IAAiB;AACtCd,IAAAA,QAAQ,CAACe,SAAS,IAAI;AAClB,YAAMC,YAAY,GAAGD,SAAS,CAACE,GAAV,CAAcC,IAAI,IACnCA,IAAI,CAACC,GAAL,KAAaL,WAAW,CAACK,GAAzB,GAA+BL,WAA/B,GAA6CI,IAD5B,CAArB;AAGA,aAAOF,YAAY,CAACI,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU,IAAIC,IAAJ,CAASD,CAAC,CAACE,SAAX,IAAwB,IAAID,IAAJ,CAASF,CAAC,CAACG,SAAX,CAApD,CAAP;AACH,KALO,CAAR;AAMH,GAPD;;AASA,QAAMC,gBAAgB,GAAIC,aAAD,IAAmB;AACxC1B,IAAAA,QAAQ,CAACe,SAAS,IAAIA,SAAS,CAACY,MAAV,CAAiBT,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaO,aAAtC,CAAd,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAEf;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKV,aAAa,CAACgB,GAAd,CAAkBC,IAAI,iBACnB,QAAC,IAAD;AAEI,MAAA,IAAI,EAAEA,IAFV;AAGI,MAAA,YAAY,EAAEL,gBAHlB;AAII,MAAA,YAAY,EAAEY;AAJlB,OACSP,IAAI,CAACC,GADd;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GArDuBrB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from '../axios';\r\nimport { updateContext } from '../context/updateContext';\r\nimport Post from './Post';\r\nimport SearchBar from './SearchBar';\r\nimport './css/Feed.css';\r\n\r\nexport default function Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filteredPosts, setFilteredPosts] = useState([]);\r\n    const [updater, setUpdater] = useContext(updateContext);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const response = await axios.get('/api/posts');\r\n                setPosts(response.data);\r\n                setFilteredPosts(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching posts:\", error);\r\n            }\r\n        };\r\n        fetchPosts();\r\n    }, [updater]);\r\n\r\n    const handleSearch = async (searchTerm) => {\r\n        try {\r\n            const response = await axios.get(`/api/posts/search?q=${searchTerm}`);\r\n            setFilteredPosts(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error searching posts:\", error);\r\n        }\r\n    };\r\n\r\n    const handlePostUpdate = (updatedPost) => {\r\n        setPosts(prevPosts => {\r\n            const updatedPosts = prevPosts.map(post => \r\n                post._id === updatedPost._id ? updatedPost : post\r\n            );\r\n            return updatedPosts.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        });\r\n    };\r\n\r\n    const handlePostDelete = (deletedPostId) => {\r\n        setPosts(prevPosts => prevPosts.filter(post => post._id !== deletedPostId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <SearchBar onSearch={handleSearch} />\r\n            {filteredPosts.map(post => (\r\n                <Post \r\n                    key={post._id} \r\n                    post={post}\r\n                    onPostUpdate={handlePostUpdate}\r\n                    onPostDelete={handlePostDelete}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}