{"ast":null,"code":"/*!\n * Compressor.js v1.2.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2023-02-28T14:09:41.732Z\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n\n    return target;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n\n    return (hint === \"string\" ? String : Number)(input);\n  }\n\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  var canvasToBlob = {\n    exports: {}\n  };\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n\n  (function (module) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    (function (window) {\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb; // Parse the dataURI components as per RFC 2397\n\n        matches = dataURI.match(dataURIPattern);\n\n        if (!matches) {\n          throw new Error('invalid data URI');\n        } // Default to text/plain;charset=US-ASCII\n\n\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        } // Write the bytes of the string to an ArrayBuffer:\n\n\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        } // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n\n\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n\n    /**\n     * Indicates if retain the image's Exif information after compressed.\n     * @type {boolean}\n    */\n    retainExif: false,\n\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n\n\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n\n    return \".\".concat(extension);\n  }\n\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n\n  var btoa = WINDOW.btoa;\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n        height = _ref.height,\n        width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get Exif information from the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {Array} The read Exif information.\n   */\n\n\n  function getExif(arrayBuffer) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    var length = array.length;\n    var segments = [];\n    var start = 0;\n\n    while (start + 3 < length) {\n      var value = array[start];\n      var next = array[start + 1]; // SOS (Start of Scan)\n\n      if (value === 0xFF && next === 0xDA) {\n        break;\n      } // SOI (Start of Image)\n\n\n      if (value === 0xFF && next === 0xD8) {\n        start += 2;\n      } else {\n        var offset = array[start + 2] * 256 + array[start + 3];\n        var end = start + offset + 2;\n        var segment = array.slice(start, end);\n        segments.push(segment);\n        start = end;\n      }\n    }\n\n    return segments.reduce(function (exifArray, current) {\n      if (current[0] === 0xFF && current[1] === 0xE1) {\n        return exifArray.concat(current);\n      }\n\n      return exifArray;\n    }, []);\n  }\n  /**\n   * Insert Exif information into the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {Array} exifArray - The Exif information to insert.\n   * @returns {ArrayBuffer} The transformed array buffer.\n   */\n\n\n  function insertExif(arrayBuffer, exifArray) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n\n    if (array[2] !== 0xFF || array[3] !== 0xE0) {\n      return arrayBuffer;\n    }\n\n    var app0Length = array[4] * 256 + array[5];\n    var newArrayBuffer = [0xFF, 0xD8].concat(exifArray, array.slice(4 + app0Length));\n    return new Uint8Array(newArrayBuffer);\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n      FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n\n      this.file = file;\n      this.exif = [];\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n\n        var file = this.file,\n            options = this.options;\n\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n\n        var mimeType = file.type;\n\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n          options.retainExif = false;\n        }\n\n        var isJPEGImage = mimeType === 'image/jpeg';\n        var checkOrientation = isJPEGImage && options.checkOrientation;\n        var retainExif = isJPEGImage && options.retainExif;\n\n        if (URL && !checkOrientation && !retainExif) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          this.reader = reader;\n\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n            var orientation = 1;\n\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              orientation = resetAndGetOrientation(result);\n\n              if (orientation > 1) {\n                _extends(data, parseOrientation(orientation));\n              }\n            }\n\n            if (retainExif) {\n              _this.exif = getExif(result);\n            }\n\n            if (checkOrientation || retainExif) {\n              if (!URL // Generate a new URL with the default orientation value 1.\n              || orientation > 1) {\n                data.url = arrayBufferToDataURL(result, mimeType);\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n\n            _this.load(data);\n          };\n\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n\n          if (checkOrientation || retainExif) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n\n        var file = this.file,\n            image = this.image;\n\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        }; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n\n        var naturalWidth = _ref2.naturalWidth,\n            naturalHeight = _ref2.naturalHeight,\n            _ref2$rotate = _ref2.rotate,\n            rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n            _ref2$scaleX = _ref2.scaleX,\n            scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n            _ref2$scaleY = _ref2.scaleY,\n            scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n            height = options.height;\n\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n\n        params.push(destX, destY, destWidth, destHeight);\n\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n\n        var fillStyle = 'transparent'; // Converts PNG files over the `convertSize` to JPEGs.\n\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n\n        var isJPEGImage = options.mimeType === 'image/jpeg';\n\n        if (isJPEGImage) {\n          fillStyle = '#fff';\n        } // Override the default fill color (#000, black)\n\n\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n\n        if (this.aborted) {\n          return;\n        }\n\n        var callback = function callback(blob) {\n          if (!_this3.aborted) {\n            var done = function done(result) {\n              return _this3.done({\n                naturalWidth: naturalWidth,\n                naturalHeight: naturalHeight,\n                result: result\n              });\n            };\n\n            if (blob && isJPEGImage && options.retainExif && _this3.exif && _this3.exif.length > 0) {\n              var next = function next(arrayBuffer) {\n                return done(toBlob(arrayBufferToDataURL(insertExif(arrayBuffer, _this3.exif), options.mimeType)));\n              };\n\n              if (blob.arrayBuffer) {\n                blob.arrayBuffer().then(next).catch(function () {\n                  _this3.fail(new Error('Failed to read the compressed image with Blob.arrayBuffer().'));\n                });\n              } else {\n                var reader = new FileReader();\n                _this3.reader = reader;\n\n                reader.onload = function (_ref7) {\n                  var target = _ref7.target;\n                  next(target.result);\n                };\n\n                reader.onabort = function () {\n                  _this3.fail(new Error('Aborted to read the compressed image with FileReader.'));\n                };\n\n                reader.onerror = function () {\n                  _this3.fail(new Error('Failed to read the compressed image with FileReader.'));\n                };\n\n                reader.onloadend = function () {\n                  _this3.reader = null;\n                };\n\n                reader.readAsArrayBuffer(blob);\n              }\n            } else {\n              done(blob);\n            }\n          }\n        };\n\n        if (canvas.toBlob) {\n          canvas.toBlob(callback, options.mimeType, options.quality);\n        } else {\n          callback(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref8) {\n        var naturalWidth = _ref8.naturalWidth,\n            naturalHeight = _ref8.naturalHeight,\n            result = _ref8.result;\n        var file = this.file,\n            image = this.image,\n            options = this.options;\n\n        if (URL && image.src.indexOf('blob:') === 0) {\n          URL.revokeObjectURL(image.src);\n        }\n\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && !options.retainExif && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name; // Convert the extension to match its type\n\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n\n        this.result = result;\n\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n\n    return Compressor;\n  }();\n\n  return Compressor;\n});","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/node_modules/compressorjs/dist/compressor.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","Compressor","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","prototype","obj","value","_extends","assign","bind","hasOwnProperty","call","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","String","Number","arg","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","Error","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","setTimeout","toDataURL","msToBlob","isBlob","toString","DEFAULTS","strict","checkOrientation","retainExif","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","height","resize","mimeType","convertTypes","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","isPositiveNumber","Array","toArray","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","concat","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","subarray","join","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","getAdjustedSizes","_ref","aspectRatio","isValidWidth","isValidHeight","adjustedWidth","getExif","array","segments","next","end","segment","reduce","exifArray","current","insertExif","app0Length","newArrayBuffer","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","file","options","exif","image","Image","aborted","result","init","_this","fail","isJPEGImage","load","url","createObjectURL","reader","onload","data","onabort","onerror","onloadend","readAsArrayBuffer","readAsDataURL","_this2","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","_ref2","_this3","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","createElement","context","getContext","is90DegreesRotated","abs","resizable","max","_ref3","_ref4","_ref5","_getAdjustedSizes","_getAdjustedSizes2","_getAdjustedSizes3","_getAdjustedSizes4","_getAdjustedSizes4$wi","_getAdjustedSizes4$he","floor","min","destX","destY","destWidth","destHeight","params","srcX","srcY","srcWidth","srcHeight","_getAdjustedSizes5","contain","cover","_ref6","fillStyle","indexOf","fillRect","save","translate","PI","scale","drawImage","restore","blob","done","then","catch","_ref7","_ref8","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete","noConflict","setDefaults"],"mappings":"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","sourcesContent":["/*!\n * Compressor.js v1.2.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2023-02-28T14:09:41.732Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  var canvasToBlob = {exports: {}};\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n  (function (module) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n    (function (window) {\n\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb;\n        // Parse the dataURI components as per RFC 2397\n        matches = dataURI.match(dataURIPattern);\n        if (!matches) {\n          throw new Error('invalid data URI');\n        }\n        // Default to text/plain;charset=US-ASCII\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        }\n        // Write the bytes of the string to an ArrayBuffer:\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        }\n        // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n    /**\n     * Indicates if retain the image's Exif information after compressed.\n     * @type {boolean}\n    */\n    retainExif: false,\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n      height = _ref.height,\n      width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get Exif information from the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {Array} The read Exif information.\n   */\n  function getExif(arrayBuffer) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    var length = array.length;\n    var segments = [];\n    var start = 0;\n    while (start + 3 < length) {\n      var value = array[start];\n      var next = array[start + 1];\n\n      // SOS (Start of Scan)\n      if (value === 0xFF && next === 0xDA) {\n        break;\n      }\n\n      // SOI (Start of Image)\n      if (value === 0xFF && next === 0xD8) {\n        start += 2;\n      } else {\n        var offset = array[start + 2] * 256 + array[start + 3];\n        var end = start + offset + 2;\n        var segment = array.slice(start, end);\n        segments.push(segment);\n        start = end;\n      }\n    }\n    return segments.reduce(function (exifArray, current) {\n      if (current[0] === 0xFF && current[1] === 0xE1) {\n        return exifArray.concat(current);\n      }\n      return exifArray;\n    }, []);\n  }\n\n  /**\n   * Insert Exif information into the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {Array} exifArray - The Exif information to insert.\n   * @returns {ArrayBuffer} The transformed array buffer.\n   */\n  function insertExif(arrayBuffer, exifArray) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    if (array[2] !== 0xFF || array[3] !== 0xE0) {\n      return arrayBuffer;\n    }\n    var app0Length = array[4] * 256 + array[5];\n    var newArrayBuffer = [0xFF, 0xD8].concat(exifArray, array.slice(4 + app0Length));\n    return new Uint8Array(newArrayBuffer);\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n    FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n      this.file = file;\n      this.exif = [];\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n        var file = this.file,\n          options = this.options;\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n        var mimeType = file.type;\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n          options.retainExif = false;\n        }\n        var isJPEGImage = mimeType === 'image/jpeg';\n        var checkOrientation = isJPEGImage && options.checkOrientation;\n        var retainExif = isJPEGImage && options.retainExif;\n        if (URL && !checkOrientation && !retainExif) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          this.reader = reader;\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n            var orientation = 1;\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              orientation = resetAndGetOrientation(result);\n              if (orientation > 1) {\n                _extends(data, parseOrientation(orientation));\n              }\n            }\n            if (retainExif) {\n              _this.exif = getExif(result);\n            }\n            if (checkOrientation || retainExif) {\n              if (!URL\n\n              // Generate a new URL with the default orientation value 1.\n              || orientation > 1) {\n                data.url = arrayBufferToDataURL(result, mimeType);\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n            _this.load(data);\n          };\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n          if (checkOrientation || retainExif) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n        var file = this.file,\n          image = this.image;\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        };\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n        var naturalWidth = _ref2.naturalWidth,\n          naturalHeight = _ref2.naturalHeight,\n          _ref2$rotate = _ref2.rotate,\n          rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n          _ref2$scaleX = _ref2.scaleX,\n          scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n          _ref2$scaleY = _ref2.scaleY,\n          scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n          height = options.height;\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n        params.push(destX, destY, destWidth, destHeight);\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n        canvas.width = width;\n        canvas.height = height;\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n        var fillStyle = 'transparent';\n\n        // Converts PNG files over the `convertSize` to JPEGs.\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n        var isJPEGImage = options.mimeType === 'image/jpeg';\n        if (isJPEGImage) {\n          fillStyle = '#fff';\n        }\n\n        // Override the default fill color (#000, black)\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        var callback = function callback(blob) {\n          if (!_this3.aborted) {\n            var done = function done(result) {\n              return _this3.done({\n                naturalWidth: naturalWidth,\n                naturalHeight: naturalHeight,\n                result: result\n              });\n            };\n            if (blob && isJPEGImage && options.retainExif && _this3.exif && _this3.exif.length > 0) {\n              var next = function next(arrayBuffer) {\n                return done(toBlob(arrayBufferToDataURL(insertExif(arrayBuffer, _this3.exif), options.mimeType)));\n              };\n              if (blob.arrayBuffer) {\n                blob.arrayBuffer().then(next).catch(function () {\n                  _this3.fail(new Error('Failed to read the compressed image with Blob.arrayBuffer().'));\n                });\n              } else {\n                var reader = new FileReader();\n                _this3.reader = reader;\n                reader.onload = function (_ref7) {\n                  var target = _ref7.target;\n                  next(target.result);\n                };\n                reader.onabort = function () {\n                  _this3.fail(new Error('Aborted to read the compressed image with FileReader.'));\n                };\n                reader.onerror = function () {\n                  _this3.fail(new Error('Failed to read the compressed image with FileReader.'));\n                };\n                reader.onloadend = function () {\n                  _this3.reader = null;\n                };\n                reader.readAsArrayBuffer(blob);\n              }\n            } else {\n              done(blob);\n            }\n          }\n        };\n        if (canvas.toBlob) {\n          canvas.toBlob(callback, options.mimeType, options.quality);\n        } else {\n          callback(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref8) {\n        var naturalWidth = _ref8.naturalWidth,\n          naturalHeight = _ref8.naturalHeight,\n          result = _ref8.result;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        if (URL && image.src.indexOf('blob:') === 0) {\n          URL.revokeObjectURL(image.src);\n        }\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && !options.retainExif && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n        this.result = result;\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n    return Compressor;\n  }();\n\n  return Compressor;\n\n}));\n"]},"metadata":{},"sourceType":"script"}