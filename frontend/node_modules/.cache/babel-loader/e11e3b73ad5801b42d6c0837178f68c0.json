{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Post.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport DOMPurify from 'dompurify';\nimport './css/Post.css';\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2, Copy } from 'lucide-react';\nimport axios from '../axios';\nimport { Link } from 'react-router-dom';\nimport config from '../config'; // We'll create this file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  post,\n  onPostUpdate,\n  onPostDelete\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  console.log('Post object:', post); // Add this line for debugging\n\n  console.log('UserId:', post.userId); // Add this line for debugging\n\n  const [localPost, setLocalPost] = useState(post);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [showPostOptions, setShowPostOptions] = useState(false);\n  const [editingPost, setEditingPost] = useState(false);\n  const [editingComment, setEditingComment] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n  const [commentOptionsId, setCommentOptionsId] = useState(null);\n  const defaultAvatar = \"https://via.placeholder.com/40\";\n  const [userProfilePicture, setUserProfilePicture] = useState(post.userProfilePicture || defaultAvatar);\n  const [isLiked, setIsLiked] = useState(false);\n  const [showSharePopup, setShowSharePopup] = useState(false);\n  const [copySuccess, setCopySuccess] = useState(''); // Add these new refs\n\n  const postOptionsRef = useRef(null);\n  const commentOptionsRef = useRef(null);\n  useEffect(() => {\n    setLocalPost(post);\n    fetchComments(); // Check if the current user has liked the post\n\n    const currentUser = JSON.parse(localStorage.getItem('user'));\n    setIsLiked(post.likes.includes(currentUser._id));\n  }, [post]);\n  useEffect(() => {\n    const fetchLatestProfilePicture = async () => {\n      if (!post.userId) {\n        console.error('No userId provided for post:', post);\n        return;\n      }\n\n      try {\n        const response = await axios.get(`/api/users/${post.userId}`);\n\n        if (response.data && response.data.profilePicture) {\n          setUserProfilePicture(response.data.profilePicture);\n        }\n      } catch (error) {\n        console.error('Error fetching latest profile picture:', error.response || error);\n      }\n    };\n\n    fetchLatestProfilePicture();\n  }, [post.userId]);\n  const fetchComments = useCallback(async () => {\n    try {\n      const response = await axios.get(`/api/posts/${localPost._id}/comments`);\n      setComments(response.data);\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  }, [localPost._id]);\n\n  const handleAddComment = async () => {\n    if (!newComment.trim()) return;\n\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\n        content: newComment,\n        userId: user._id,\n        username: user.username\n      });\n      const updatedComments = await axios.get(`/api/posts/${localPost._id}/comments`);\n      setComments(updatedComments.data);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n\n  const handleEditPost = () => {\n    setEditingPost(true);\n    setEditedContent(localPost.content);\n    setShowPostOptions(false);\n  };\n\n  const handleUpdatePost = async () => {\n    console.log('Attempting to update post:', localPost._id); // Add this line\n\n    try {\n      const response = await axios.put(`/api/posts/${localPost._id}`, {\n        content: editedContent,\n        userId: localPost.userId\n      });\n      setLocalPost(response.data);\n      setEditingPost(false);\n      console.log('Post updated successfully:', response.data); // Add this line\n\n      if (typeof onPostUpdate === 'function') {\n        onPostUpdate(response.data);\n      } else {\n        console.warn('onPostUpdate is not a function:', onPostUpdate);\n      }\n    } catch (error) {\n      console.error('Error updating post:', error);\n\n      if (error.response && error.response.status === 403) {\n        alert('You do not have permission to edit this post.');\n      } else {\n        console.error('An error occurred while updating the post:', error);\n      }\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await axios.delete(`/api/posts/${localPost._id}`, {\n        data: {\n          userId: user._id\n        }\n      });\n\n      if (typeof onPostDelete === 'function') {\n        onPostDelete(localPost._id);\n      }\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  const handleEditComment = comment => {\n    setEditingComment(comment._id);\n    setEditedContent(comment.content);\n    setCommentOptionsId(null);\n  };\n\n  const handleUpdateComment = async commentId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\n        content: editedContent,\n        userId: user._id\n      }); // Check if the response contains the updated comment data\n\n      if (response.data && response.data._id) {\n        const updatedComment = response.data;\n        setComments(comments.map(c => c._id === commentId ? updatedComment : c));\n        setEditingComment(null);\n        setEditedContent('');\n      } else {\n        console.error('Unexpected response format:', response.data);\n      }\n    } catch (error) {\n      console.error('Error updating comment:', error);\n    }\n  };\n\n  const handleDeleteComment = async commentId => {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n      await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\n        data: {\n          userId: user._id\n        }\n      });\n      setComments(comments.filter(c => c._id !== commentId));\n      setCommentOptionsId(null);\n    } catch (error) {\n      console.error('Error deleting comment:', error);\n    }\n  };\n\n  const handleLike = async () => {\n    try {\n      const currentUser = JSON.parse(localStorage.getItem('user'));\n      const response = await axios.put(`/api/posts/${localPost._id}/like`, {\n        userId: currentUser._id\n      }); // Update local state\n\n      const updatedLikes = isLiked ? localPost.likes.filter(id => id !== currentUser._id) : [...localPost.likes, currentUser._id];\n      setLocalPost(prev => ({ ...prev,\n        likes: updatedLikes\n      }));\n      setIsLiked(!isLiked); // Call onPostUpdate if it exists\n\n      if (typeof onPostUpdate === 'function') {\n        onPostUpdate({ ...localPost,\n          likes: updatedLikes\n        });\n      }\n    } catch (error) {\n      console.error('Error liking/unliking post:', error);\n    }\n  };\n\n  const handleShareClick = () => {\n    setShowSharePopup(true);\n  };\n\n  const copyToClipboard = () => {\n    const postLink = `${window.location.origin}/thread/${localPost.threadId}`;\n    navigator.clipboard.writeText(postLink).then(() => {\n      setCopySuccess('Link copied!');\n      setTimeout(() => setCopySuccess(''), 2000);\n    }).catch(err => {\n      console.error('Failed to copy: ', err);\n    });\n  }; // Add this new useEffect hook\n\n\n  useEffect(() => {\n    const handleOutsideClick = event => {\n      if (postOptionsRef.current && !postOptionsRef.current.contains(event.target)) {\n        setShowPostOptions(false);\n      }\n\n      if (commentOptionsRef.current && !commentOptionsRef.current.contains(event.target)) {\n        setCommentOptionsId(null);\n      }\n    };\n\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, []);\n\n  const renderContent = () => {\n    const sanitizedContent = DOMPurify.sanitize(localPost.content);\n    return {\n      __html: sanitizedContent\n    };\n  };\n\n  const ContentRenderer = ({\n    content\n  }) => {\n    _s();\n\n    const containerRef = useRef(null);\n    useEffect(() => {\n      if (containerRef.current) {\n        containerRef.current.innerHTML = content.__html;\n      }\n    }, [content]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 16\n    }, this);\n  };\n\n  _s(ContentRenderer, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: userProfilePicture || defaultAvatar,\n        alt: localPost.user,\n        className: \"avatar\",\n        onError: e => {\n          e.target.onerror = null;\n          e.target.src = defaultAvatar;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: localPost.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(localPost.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-options\",\n        children: [/*#__PURE__*/_jsxDEV(MoreHorizontal, {\n          size: 20,\n          className: \"more-options\",\n          onClick: () => setShowPostOptions(!showPostOptions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), showPostOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-dropdown\",\n          ref: postOptionsRef,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleEditPost,\n            children: [/*#__PURE__*/_jsxDEV(Edit, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 62\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeletePost,\n            children: [/*#__PURE__*/_jsxDEV(Trash2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 64\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: [localPost.title && /*#__PURE__*/_jsxDEV(Link, {\n        to: `/thread/${localPost.threadId}`,\n        style: {\n          textDecoration: 'none',\n          color: 'inherit'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"thread-title\",\n          children: localPost.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), editingPost ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedContent,\n          onChange: e => setEditedContent(e.target.value),\n          className: \"edit-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdatePost,\n            className: \"btn btn-save\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setEditingPost(false);\n              setEditedContent('');\n            },\n            className: \"btn btn-cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ContentRenderer, {\n          content: renderContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), localPost.images && localPost.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-images\",\n          children: localPost.images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${config.apiUrl}/${image}`,\n            alt: `Post image ${index + 1}`,\n            className: \"post-image\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLike,\n        className: `like-button ${isLiked ? 'liked' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(Heart, {\n          size: 20,\n          fill: isLiked ? \"#ff0000\" : \"none\",\n          stroke: isLiked ? \"#ff0000\" : \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this), localPost.likes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 25\n        }, this), \" \", comments.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShareClick,\n        children: /*#__PURE__*/_jsxDEV(Share2, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), showSharePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"share-popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Share this post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"share-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: `${window.location.origin}/thread/${localPost.threadId}`,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: copyToClipboard,\n            children: /*#__PURE__*/_jsxDEV(Copy, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), copySuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"copy-success\",\n          children: copySuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowSharePopup(false),\n          className: \"close-popup\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comments\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: comment.userProfilePicture || defaultAvatar,\n          alt: comment.username,\n          className: \"avatar-small\",\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = defaultAvatar;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 29\n          }, this), editingComment === comment._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit-comment-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editedContent,\n              onChange: e => setEditedContent(e.target.value),\n              className: \"edit-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdateComment(comment._id),\n                className: \"btn btn-save\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setEditingComment(null);\n                  setEditedContent('');\n                },\n                className: \"btn btn-cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-options\",\n          children: [/*#__PURE__*/_jsxDEV(MoreHorizontal, {\n            size: 16,\n            onClick: () => setCommentOptionsId(comment._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 29\n          }, this), commentOptionsId === comment._id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-dropdown\",\n            ref: commentOptionsRef,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditComment(comment),\n              children: [/*#__PURE__*/_jsxDEV(Edit, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 88\n              }, this), \" Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteComment(comment._id),\n              children: [/*#__PURE__*/_jsxDEV(Trash2, {\n                size: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 94\n              }, this), \" Delete\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 25\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-comment-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment...\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            e.preventDefault();\n            handleAddComment();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Post, \"yLidkWmwmB33/bVRIXaAzY3SqvY=\");\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Post.jsx"],"names":["React","useState","useEffect","useCallback","useRef","DOMPurify","Heart","MessageCircle","Share2","MoreHorizontal","Send","Edit","Trash2","Copy","axios","Link","config","Post","post","onPostUpdate","onPostDelete","console","log","userId","localPost","setLocalPost","comments","setComments","newComment","setNewComment","showPostOptions","setShowPostOptions","editingPost","setEditingPost","editingComment","setEditingComment","editedContent","setEditedContent","commentOptionsId","setCommentOptionsId","defaultAvatar","userProfilePicture","setUserProfilePicture","isLiked","setIsLiked","showSharePopup","setShowSharePopup","copySuccess","setCopySuccess","postOptionsRef","commentOptionsRef","fetchComments","currentUser","JSON","parse","localStorage","getItem","likes","includes","_id","fetchLatestProfilePicture","error","response","get","data","profilePicture","handleAddComment","trim","user","content","username","updatedComments","handleEditPost","handleUpdatePost","put","warn","status","alert","handleDeletePost","delete","handleEditComment","comment","handleUpdateComment","commentId","updatedComment","map","c","handleDeleteComment","filter","handleLike","updatedLikes","id","prev","handleShareClick","copyToClipboard","postLink","window","location","origin","threadId","navigator","clipboard","writeText","then","setTimeout","catch","err","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","renderContent","sanitizedContent","sanitize","__html","ContentRenderer","containerRef","innerHTML","e","onerror","src","Date","createdAt","toLocaleString","title","textDecoration","color","value","images","length","image","index","apiUrl","key","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport DOMPurify from 'dompurify';\nimport './css/Post.css';\nimport { Heart, MessageCircle, Share2, MoreHorizontal, Send, Edit, Trash2, Copy } from 'lucide-react';\nimport axios from '../axios';\nimport { Link } from 'react-router-dom';\nimport config from '../config'; // We'll create this file\n\nexport default function Post({ post, onPostUpdate, onPostDelete }) {\n    console.log('Post object:', post); // Add this line for debugging\n    console.log('UserId:', post.userId); // Add this line for debugging\n\n    const [localPost, setLocalPost] = useState(post);\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n    const [showPostOptions, setShowPostOptions] = useState(false);\n    const [editingPost, setEditingPost] = useState(false);\n    const [editingComment, setEditingComment] = useState(null);\n    const [editedContent, setEditedContent] = useState('');\n    const [commentOptionsId, setCommentOptionsId] = useState(null);\n    const defaultAvatar = \"https://via.placeholder.com/40\";\n\n    const [userProfilePicture, setUserProfilePicture] = useState(post.userProfilePicture || defaultAvatar);\n    const [isLiked, setIsLiked] = useState(false);\n    const [showSharePopup, setShowSharePopup] = useState(false);\n    const [copySuccess, setCopySuccess] = useState('');\n\n    // Add these new refs\n    const postOptionsRef = useRef(null);\n    const commentOptionsRef = useRef(null);\n\n    useEffect(() => {\n        setLocalPost(post);\n        fetchComments();\n        // Check if the current user has liked the post\n        const currentUser = JSON.parse(localStorage.getItem('user'));\n        setIsLiked(post.likes.includes(currentUser._id));\n    }, [post]);\n\n    useEffect(() => {\n        const fetchLatestProfilePicture = async () => {\n            if (!post.userId) {\n                console.error('No userId provided for post:', post);\n                return;\n            }\n            try {\n                const response = await axios.get(`/api/users/${post.userId}`);\n                if (response.data && response.data.profilePicture) {\n                    setUserProfilePicture(response.data.profilePicture);\n                }\n            } catch (error) {\n                console.error('Error fetching latest profile picture:', error.response || error);\n            }\n        };\n\n        fetchLatestProfilePicture();\n    }, [post.userId]);\n\n    const fetchComments = useCallback(async () => {\n        try {\n            const response = await axios.get(`/api/posts/${localPost._id}/comments`);\n            setComments(response.data);\n        } catch (error) {\n            console.error('Error fetching comments:', error);\n        }\n    }, [localPost._id]);\n\n    const handleAddComment = async () => {\n        if (!newComment.trim()) return;\n\n        try {\n            const user = JSON.parse(localStorage.getItem('user'));\n            const response = await axios.post(`/api/posts/${localPost._id}/comments`, {\n                content: newComment,\n                userId: user._id,\n                username: user.username\n            });\n            const updatedComments = await axios.get(`/api/posts/${localPost._id}/comments`);\n            setComments(updatedComments.data);\n            setNewComment('');\n        } catch (error) {\n            console.error('Error adding comment:', error);\n        }\n    };\n\n    const handleEditPost = () => {\n        setEditingPost(true);\n        setEditedContent(localPost.content);\n        setShowPostOptions(false);\n    };\n\n    const handleUpdatePost = async () => {\n        console.log('Attempting to update post:', localPost._id); // Add this line\n        try {\n            const response = await axios.put(`/api/posts/${localPost._id}`, {\n                content: editedContent,\n                userId: localPost.userId\n            });\n            setLocalPost(response.data);\n            setEditingPost(false);\n            console.log('Post updated successfully:', response.data); // Add this line\n            if (typeof onPostUpdate === 'function') {\n                onPostUpdate(response.data);\n            } else {\n                console.warn('onPostUpdate is not a function:', onPostUpdate);\n            }\n        } catch (error) {\n            console.error('Error updating post:', error);\n            if (error.response && error.response.status === 403) {\n                alert('You do not have permission to edit this post.');\n            } else {\n                console.error('An error occurred while updating the post:', error);\n            }\n        }\n    };\n\n    const handleDeletePost = async () => {\n        try {\n            const user = JSON.parse(localStorage.getItem('user'));\n            await axios.delete(`/api/posts/${localPost._id}`, {\n                data: { userId: user._id }\n            });\n            if (typeof onPostDelete === 'function') {\n                onPostDelete(localPost._id);\n            }\n        } catch (error) {\n            console.error('Error deleting post:', error);\n        }\n    };\n\n    const handleEditComment = (comment) => {\n        setEditingComment(comment._id);\n        setEditedContent(comment.content);\n        setCommentOptionsId(null);\n    };\n\n    const handleUpdateComment = async (commentId) => {\n        try {\n            const user = JSON.parse(localStorage.getItem('user'));\n            const response = await axios.put(`/api/posts/${localPost._id}/comments/${commentId}`, {\n                content: editedContent,\n                userId: user._id\n            });\n            \n            // Check if the response contains the updated comment data\n            if (response.data && response.data._id) {\n                const updatedComment = response.data;\n                setComments(comments.map(c => c._id === commentId ? updatedComment : c));\n                setEditingComment(null);\n                setEditedContent('');\n            } else {\n                console.error('Unexpected response format:', response.data);\n            }\n        } catch (error) {\n            console.error('Error updating comment:', error);\n        }\n    };\n\n    const handleDeleteComment = async (commentId) => {\n        try {\n            const user = JSON.parse(localStorage.getItem('user'));\n            await axios.delete(`/api/posts/${localPost._id}/comments/${commentId}`, {\n                data: { userId: user._id }\n            });\n            setComments(comments.filter(c => c._id !== commentId));\n            setCommentOptionsId(null);\n        } catch (error) {\n            console.error('Error deleting comment:', error);\n        }\n    };\n\n    const handleLike = async () => {\n        try {\n            const currentUser = JSON.parse(localStorage.getItem('user'));\n            const response = await axios.put(`/api/posts/${localPost._id}/like`, {\n                userId: currentUser._id\n            });\n\n            // Update local state\n            const updatedLikes = isLiked\n                ? localPost.likes.filter(id => id !== currentUser._id)\n                : [...localPost.likes, currentUser._id];\n\n            setLocalPost(prev => ({\n                ...prev,\n                likes: updatedLikes\n            }));\n            setIsLiked(!isLiked);\n\n            // Call onPostUpdate if it exists\n            if (typeof onPostUpdate === 'function') {\n                onPostUpdate({\n                    ...localPost,\n                    likes: updatedLikes\n                });\n            }\n        } catch (error) {\n            console.error('Error liking/unliking post:', error);\n        }\n    };\n\n    const handleShareClick = () => {\n        setShowSharePopup(true);\n    };\n\n    const copyToClipboard = () => {\n        const postLink = `${window.location.origin}/thread/${localPost.threadId}`;\n        navigator.clipboard.writeText(postLink)\n            .then(() => {\n                setCopySuccess('Link copied!');\n                setTimeout(() => setCopySuccess(''), 2000);\n            })\n            .catch(err => {\n                console.error('Failed to copy: ', err);\n            });\n    };\n\n    // Add this new useEffect hook\n    useEffect(() => {\n        const handleOutsideClick = (event) => {\n            if (postOptionsRef.current && !postOptionsRef.current.contains(event.target)) {\n                setShowPostOptions(false);\n            }\n            if (commentOptionsRef.current && !commentOptionsRef.current.contains(event.target)) {\n                setCommentOptionsId(null);\n            }\n        };\n\n        document.addEventListener('mousedown', handleOutsideClick);\n\n        return () => {\n            document.removeEventListener('mousedown', handleOutsideClick);\n        };\n    }, []);\n\n    const renderContent = () => {\n        const sanitizedContent = DOMPurify.sanitize(localPost.content);\n        return { __html: sanitizedContent };\n    };\n\n    const ContentRenderer = ({ content }) => {\n        const containerRef = useRef(null);\n\n        useEffect(() => {\n            if (containerRef.current) {\n                containerRef.current.innerHTML = content.__html;\n            }\n        }, [content]);\n\n        return <div ref={containerRef} />;\n    };\n\n    return (\n        <div className=\"post\">\n            <div className=\"post-header\">\n                <img \n                    src={userProfilePicture || defaultAvatar} \n                    alt={localPost.user} \n                    className=\"avatar\" \n                    onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\n                />\n                <div className=\"post-info\">\n                    <h3>{localPost.user}</h3>\n                    <span>{new Date(localPost.createdAt).toLocaleString()}</span>\n                </div>\n            <div className=\"post-options\">\n                    <MoreHorizontal size={20} className=\"more-options\" onClick={() => setShowPostOptions(!showPostOptions)} />\n                    {showPostOptions && (\n                        <div className=\"options-dropdown\" ref={postOptionsRef}>\n                            <button onClick={handleEditPost}><Edit size={16} /> Edit</button>\n                            <button onClick={handleDeletePost}><Trash2 size={16} /> Delete</button>\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"post-content\">\n                {localPost.title && (\n                    <Link to={`/thread/${localPost.threadId}`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                        <h4 className=\"thread-title\">{localPost.title}</h4>\n                    </Link>\n                )}\n                {editingPost ? (\n                    <div className=\"edit-post-container\">\n                        <textarea\n                            value={editedContent}\n                            onChange={(e) => setEditedContent(e.target.value)}\n                            className=\"edit-textarea\"\n                        />\n                        <div className=\"edit-buttons\">\n                            <button onClick={handleUpdatePost} className=\"btn btn-save\">Save</button>\n                            <button onClick={() => {\n                                setEditingPost(false);\n                                setEditedContent('');\n                            }} className=\"btn btn-cancel\">Cancel</button>\n                        </div>\n                    </div>\n                ) : (\n                    <>\n                        <ContentRenderer content={renderContent()} />\n                        {localPost.images && localPost.images.length > 0 && (\n                            <div className=\"post-images\">\n                                {localPost.images.map((image, index) => (\n                                    <img \n                                        key={index} \n                                        src={`${config.apiUrl}/${image}`} \n                                        alt={`Post image ${index + 1}`} \n                                        className=\"post-image\"\n                                    />\n                                ))}\n                            </div>\n                        )}\n                    </>\n                )}\n            </div>\n            <div className=\"post-actions\">\n                <button onClick={handleLike} className={`like-button ${isLiked ? 'liked' : ''}`}>\n                    <Heart size={20} fill={isLiked ? \"#ff0000\" : \"none\"} stroke={isLiked ? \"#ff0000\" : \"currentColor\"} />\n                    {localPost.likes.length}\n                </button>\n                <button><MessageCircle size={20} /> {comments.length}</button>\n                <button onClick={handleShareClick}><Share2 size={20} /></button>\n            </div>\n            {showSharePopup && (\n                <div className=\"share-popup\">\n                    <div className=\"share-popup-content\">\n                        <h4>Share this post</h4>\n                        <div className=\"share-link\">\n                            <input \n                                type=\"text\" \n                                value={`${window.location.origin}/thread/${localPost.threadId}`} \n                                readOnly \n                            />\n                            <button onClick={copyToClipboard}>\n                                <Copy size={16} />\n                            </button>\n                        </div>\n                        {copySuccess && <p className=\"copy-success\">{copySuccess}</p>}\n                        <button onClick={() => setShowSharePopup(false)} className=\"close-popup\">Close</button>\n                    </div>\n                </div>\n            )}\n            <div className=\"post-comments\">\n                {comments.map((comment) => (\n                    <div key={comment._id} className=\"comment\">\n                        <img \n                            src={comment.userProfilePicture || defaultAvatar} \n                            alt={comment.username} \n                            className=\"avatar-small\" \n                            onError={(e) => { e.target.onerror = null; e.target.src = defaultAvatar; }}\n                        />\n                        <div className=\"comment-content\">\n                            <strong>{comment.username}</strong>\n                            {editingComment === comment._id ? (\n                                <div className=\"edit-comment-container\">\n                                    <textarea\n                                        value={editedContent}\n                                        onChange={(e) => setEditedContent(e.target.value)}\n                                        className=\"edit-textarea\"\n                                    />\n                                    <div className=\"edit-buttons\">\n                                        <button onClick={() => handleUpdateComment(comment._id)} className=\"btn btn-save\">Save</button>\n                                        <button onClick={() => {\n                                            setEditingComment(null);\n                                            setEditedContent('');\n                                        }} className=\"btn btn-cancel\">Cancel</button>\n                                    </div>\n                                </div>\n                            ) : (\n                                <p>{comment.content}</p>\n                            )}\n                        </div>\n                        <div className=\"comment-options\">\n                            <MoreHorizontal size={16} onClick={() => setCommentOptionsId(comment._id)} />\n                            {commentOptionsId === comment._id && (\n                                <div className=\"options-dropdown\" ref={commentOptionsRef}>\n                                    <button onClick={() => handleEditComment(comment)}><Edit size={14} /> Edit</button>\n                                    <button onClick={() => handleDeleteComment(comment._id)}><Trash2 size={14} /> Delete</button>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"post-comment-input\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Write a comment...\"\n                    value={newComment}\n                    onChange={(e) => setNewComment(e.target.value)}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            e.preventDefault();\n                            handleAddComment();\n                        }\n                    }}\n                />\n                <button onClick={handleAddComment}><Send size={20} /></button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}