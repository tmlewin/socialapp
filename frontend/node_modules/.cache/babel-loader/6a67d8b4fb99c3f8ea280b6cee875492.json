{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/Header.css';\nimport { Bell, User, LogOut } from 'lucide-react';\nimport axios from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header({\n  onLogout\n}) {\n  _s();\n\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    const fetchUnreadCount = async () => {\n      try {\n        const response = await axios.get('/api/users/unread-count');\n        setUnreadCount(response.data.unreadCount);\n      } catch (error) {\n        console.error('Error fetching unread count:', error);\n      }\n    };\n\n    fetchUnreadCount(); // You can set up an interval to periodically check for new messages\n\n    const interval = setInterval(fetchUnreadCount, 60000); // Check every minute\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Socially Social\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forum\",\n        children: \"Forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/threads\",\n        children: \"Threads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/messages\",\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/messages\",\n        className: \"notification-icon\",\n        children: [/*#__PURE__*/_jsxDEV(Bell, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"notification-badge\",\n          children: unreadCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(User, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"logout-btn\",\n        children: [/*#__PURE__*/_jsxDEV(LogOut, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), \"Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"kbkQyZcWntSU4g4UPMkVP4HEso8=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Header.jsx"],"names":["React","useEffect","useState","Link","Bell","User","LogOut","axios","Header","onLogout","unreadCount","setUnreadCount","fetchUnreadCount","response","get","data","error","console","interval","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,cAAnC;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA8B;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,gBAAgB,GAAG,YAAY;AACjC,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,yBAAV,CAAvB;AACAH,QAAAA,cAAc,CAACE,QAAQ,CAACE,IAAT,CAAcL,WAAf,CAAd;AACH,OAHD,CAGE,OAAOM,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACH;AACJ,KAPD;;AASAJ,IAAAA,gBAAgB,GAVJ,CAWZ;;AACA,UAAMM,QAAQ,GAAGC,WAAW,CAACP,gBAAD,EAAmB,KAAnB,CAA5B,CAZY,CAY2C;;AAEvD,WAAO,MAAMQ,aAAa,CAACF,QAAD,CAA1B;AACH,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eASI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,mBAA/B;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKR,WAAW,GAAG,CAAd,iBAAmB;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAA,oBAAsCA;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAZ;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAED,QAAjB;AAA2B,QAAA,SAAS,EAAC,YAArC;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA3CuBD,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport './css/Header.css'\nimport { Bell, User, LogOut } from 'lucide-react';\nimport axios from '../axios';\n\nexport default function Header({ onLogout }) {\n    const [unreadCount, setUnreadCount] = useState(0);\n\n    useEffect(() => {\n        const fetchUnreadCount = async () => {\n            try {\n                const response = await axios.get('/api/users/unread-count');\n                setUnreadCount(response.data.unreadCount);\n            } catch (error) {\n                console.error('Error fetching unread count:', error);\n            }\n        };\n\n        fetchUnreadCount();\n        // You can set up an interval to periodically check for new messages\n        const interval = setInterval(fetchUnreadCount, 60000); // Check every minute\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <header className=\"header\">\n            <h1>Socially Social</h1>\n            <nav>\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/forum\">Forum</Link>\n                <Link to=\"/threads\">Threads</Link>\n                <Link to=\"/profile\">Profile</Link>\n                <Link to=\"/messages\">Messages</Link>\n            </nav>\n            <div className=\"header-actions\">\n                <Link to=\"/messages\" className=\"notification-icon\">\n                    <Bell size={24} />\n                    {unreadCount > 0 && <span className=\"notification-badge\">{unreadCount}</span>}\n                </Link>\n                <User size={24} />\n                <button onClick={onLogout} className=\"logout-btn\">\n                    <LogOut size={24} />\n                    Logout\n                </button>\n            </div>\n        </header>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}