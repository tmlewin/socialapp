{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\AuthForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from '../axios';\nimport { Eye } from 'lucide-react';\nimport './css/AuthForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = ({\n  onAuth\n}) => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      if (!isLogin && password !== confirmPassword) {\n        setError(\"Passwords don't match\");\n        return;\n      }\n\n      const endpoint = isLogin ? '/api/auth/login' : '/api/auth/register';\n      const response = await axios.post(endpoint, {\n        username,\n        password\n      });\n      onAuth(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter your credentials to access your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-toggle\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: isLogin ? 'active' : '',\n          onClick: () => setIsLogin(true),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: !isLogin ? 'active' : '',\n          onClick: () => setIsLogin(false),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"Enter your username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: showPassword ? \"text\" : \"password\",\n              id: \"password\",\n              placeholder: \"Enter your password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Eye, {\n              className: \"password-toggle\",\n              onClick: () => setShowPassword(!showPassword)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            placeholder: \"Confirm your password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          children: isLogin ? 'Sign In' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"terms\",\n        children: \"Protected by reCAPTCHA and subject to the Privacy Policy and Terms of Service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthForm, \"n2zfXxheMKoD1txslJBtoLCwxbE=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/AuthForm.jsx"],"names":["React","useState","axios","Eye","AuthForm","onAuth","isLogin","setIsLogin","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","error","setError","showPassword","setShowPassword","handleSubmit","e","preventDefault","endpoint","response","post","data","err","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../axios';\r\nimport { Eye } from 'lucide-react';\r\nimport './css/AuthForm.css';\r\n\r\nconst AuthForm = ({ onAuth }) => {\r\n    const [isLogin, setIsLogin] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError('');\r\n        try {\r\n            if (!isLogin && password !== confirmPassword) {\r\n                setError(\"Passwords don't match\");\r\n                return;\r\n            }\r\n            const endpoint = isLogin ? '/api/auth/login' : '/api/auth/register';\r\n            const response = await axios.post(endpoint, { username, password });\r\n            onAuth(response.data);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'An error occurred');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n            <div className=\"auth-form\">\r\n                <h1>Welcome back</h1>\r\n                <p>Enter your credentials to access your account</p>\r\n                <div className=\"auth-toggle\">\r\n                    <button \r\n                        className={isLogin ? 'active' : ''} \r\n                        onClick={() => setIsLogin(true)}\r\n                    >\r\n                        Login\r\n                    </button>\r\n                    <button \r\n                        className={!isLogin ? 'active' : ''} \r\n                        onClick={() => setIsLogin(false)}\r\n                    >\r\n                        Register\r\n                    </button>\r\n                </div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            placeholder=\"Enter your username\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <div className=\"password-input\">\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                id=\"password\"\r\n                                placeholder=\"Enter your password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                            <Eye \r\n                                className=\"password-toggle\" \r\n                                onClick={() => setShowPassword(!showPassword)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {!isLogin && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirmPassword\"\r\n                                placeholder=\"Confirm your password\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {error && <p className=\"error\">{error}</p>}\r\n                    <button type=\"submit\" className=\"submit-btn\">\r\n                        {isLogin ? 'Sign In' : 'Create Account'}\r\n                    </button>\r\n                </form>\r\n                <p className=\"terms\">\r\n                    Protected by reCAPTCHA and subject to the Privacy Policy and Terms of Service\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;"]},"metadata":{},"sourceType":"module"}