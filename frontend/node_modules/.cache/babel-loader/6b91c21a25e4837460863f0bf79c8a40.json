{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from '../axios';\nimport { updateContext } from '../context/updateContext';\nimport CreatePost from './CreatePost';\nimport Post from './Post';\nimport './css/Feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [updater, setUpdater] = useContext(updateContext);\n  useEffect(() => {\n    fetchPosts();\n  }, [updater]);\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get('/api/posts');\n      setPosts(response.data.reverse());\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n\n  const handlePostCreated = newPost => {\n    setPosts([newPost, ...posts]);\n  };\n\n  const handlePostUpdate = updatedPost => {\n    setPosts(prevPosts => prevPosts.map(post => post._id === updatedPost._id ? updatedPost : post));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onPostUpdate: handlePostUpdate,\n      onPostDelete: handlePostDelete\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"GjrHqOFAPy/sRJFK61ldEwkRfIE=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/Feed.jsx"],"names":["React","useState","useEffect","useContext","axios","updateContext","CreatePost","Post","Feed","posts","setPosts","updater","setUpdater","fetchPosts","response","get","data","reverse","error","console","handlePostCreated","newPost","handlePostUpdate","updatedPost","prevPosts","map","post","_id","handlePostDelete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBT,UAAU,CAACE,aAAD,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACF,OAAD,CAFM,CAAT;;AAIA,QAAME,UAAU,GAAG,YAAY;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,YAAV,CAAvB;AACAL,MAAAA,QAAQ,CAACI,QAAQ,CAACE,IAAT,CAAcC,OAAd,EAAD,CAAR;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACH;AACJ,GAPD;;AASA,QAAME,iBAAiB,GAAIC,OAAD,IAAa;AACnCX,IAAAA,QAAQ,CAAC,CAACW,OAAD,EAAU,GAAGZ,KAAb,CAAD,CAAR;AACH,GAFD;;AAIA,QAAMa,gBAAgB,GAAIC,WAAD,IAAiB;AACtCb,IAAAA,QAAQ,CAACc,SAAS,IAAIA,SAAS,CAACC,GAAV,CAAcC,IAAI,IACpCA,IAAI,CAACC,GAAL,KAAaJ,WAAW,CAACI,GAAzB,GAA+BJ,WAA/B,GAA6CG,IAD3B,CAAd,CAAR;AAGH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEN;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKX,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBACX,QAAC,IAAD;AAEI,MAAA,IAAI,EAAEA,IAFV;AAGI,MAAA,YAAY,EAAEJ,gBAHlB;AAII,MAAA,YAAY,EAAEM;AAJlB,OACSF,IAAI,CAACC,GADd;AAAA;AAAA;AAAA;AAAA,YADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAxCuBnB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from '../axios';\r\nimport { updateContext } from '../context/updateContext';\r\nimport CreatePost from './CreatePost';\r\nimport Post from './Post';\r\nimport './css/Feed.css';\r\n\r\nexport default function Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [updater, setUpdater] = useContext(updateContext);\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [updater]);\r\n\r\n    const fetchPosts = async () => {\r\n        try {\r\n            const response = await axios.get('/api/posts');\r\n            setPosts(response.data.reverse());\r\n        } catch (error) {\r\n            console.error(\"Error fetching posts:\", error);\r\n        }\r\n    };\r\n\r\n    const handlePostCreated = (newPost) => {\r\n        setPosts([newPost, ...posts]);\r\n    };\r\n\r\n    const handlePostUpdate = (updatedPost) => {\r\n        setPosts(prevPosts => prevPosts.map(post => \r\n            post._id === updatedPost._id ? updatedPost : post\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <CreatePost onPostCreated={handlePostCreated} />\r\n            {posts.map(post => (\r\n                <Post \r\n                    key={post._id} \r\n                    post={post} \r\n                    onPostUpdate={handlePostUpdate}\r\n                    onPostDelete={handlePostDelete}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}