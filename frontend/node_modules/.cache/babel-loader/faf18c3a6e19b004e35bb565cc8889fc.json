{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tech Guru\\\\Desktop\\\\Javascript\\\\social\\\\frontend\\\\src\\\\components\\\\ForumPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from '../axios';\nimport ThreadList from './ThreadList';\nimport CreateThread from './CreateThread'; // Ensure this import is correct\n\nimport './css/ForumPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForumPage = () => {\n  _s();\n\n  const [threads, setThreads] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    let isMounted = true;\n\n    const fetchThreads = async () => {\n      try {\n        const response = await axios.get('/api/threads');\n\n        if (isMounted) {\n          setThreads(response.data);\n          setLoading(false);\n        }\n      } catch (error) {\n        console.error('Error fetching threads:', error);\n\n        if (isMounted) {\n          setError('Failed to fetch threads. Please try again later.');\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchThreads();\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  const handleThreadCreated = newThread => {\n    setThreads(prevThreads => [newThread, ...prevThreads]);\n  };\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading forum...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forum-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forum Threads\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateThread, {\n      onThreadCreated: handleThreadCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), threads.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No threads found. Be the first to create a thread!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ThreadList, {\n      threads: threads\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForumPage, \"176PDi5m4uWjlo2O6YaXAVCBr8s=\");\n\n_c = ForumPage;\nexport default ForumPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForumPage\");","map":{"version":3,"sources":["C:/Users/Tech Guru/Desktop/Javascript/social/frontend/src/components/ForumPage.jsx"],"names":["React","useState","useEffect","axios","ThreadList","CreateThread","ForumPage","threads","setThreads","loading","setLoading","error","setError","isMounted","fetchThreads","response","get","data","console","handleThreadCreated","newThread","prevThreads","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAA2C;;AAC3C,OAAO,qBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,SAAS,GAAG,IAAhB;;AACA,UAAMC,YAAY,GAAG,YAAY;AAC7B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,cAAV,CAAvB;;AACA,YAAIH,SAAJ,EAAe;AACXL,UAAAA,UAAU,CAACO,QAAQ,CAACE,IAAV,CAAV;AACAP,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,OAND,CAME,OAAOC,KAAP,EAAc;AACZO,QAAAA,OAAO,CAACP,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;;AACA,YAAIE,SAAJ,EAAe;AACXD,UAAAA,QAAQ,CAAC,kDAAD,CAAR;AACAF,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ;AACJ,KAdD;;AAgBAI,IAAAA,YAAY;AAEZ,WAAO,MAAM;AACTD,MAAAA,SAAS,GAAG,KAAZ;AACH,KAFD;AAGH,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,QAAMM,mBAAmB,GAAIC,SAAD,IAAe;AACvCZ,IAAAA,UAAU,CAACa,WAAW,IAAI,CAACD,SAAD,EAAY,GAAGC,WAAf,CAAhB,CAAV;AACH,GAFD;;AAIA,MAAIZ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,eAAe,EAAEQ;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKZ,OAAO,CAACe,MAAR,KAAmB,CAAnB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAGG,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEf;AAArB;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhDD;;GAAMD,S;;KAAAA,S;AAkDN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from '../axios';\r\nimport ThreadList from './ThreadList';\r\nimport CreateThread from './CreateThread'; // Ensure this import is correct\r\nimport './css/ForumPage.css';\r\n\r\nconst ForumPage = () => {\r\n    const [threads, setThreads] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const fetchThreads = async () => {\r\n            try {\r\n                const response = await axios.get('/api/threads');\r\n                if (isMounted) {\r\n                    setThreads(response.data);\r\n                    setLoading(false);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching threads:', error);\r\n                if (isMounted) {\r\n                    setError('Failed to fetch threads. Please try again later.');\r\n                    setLoading(false);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchThreads();\r\n\r\n        return () => {\r\n            isMounted = false;\r\n        };\r\n    }, []);\r\n\r\n    const handleThreadCreated = (newThread) => {\r\n        setThreads(prevThreads => [newThread, ...prevThreads]);\r\n    };\r\n\r\n    if (loading) return <div>Loading forum...</div>;\r\n    if (error) return <div>{error}</div>;\r\n\r\n    return (\r\n        <div className=\"forum-page\">\r\n            <h1>Forum Threads</h1>\r\n            <CreateThread onThreadCreated={handleThreadCreated} />\r\n            {threads.length === 0 ? (\r\n                <p>No threads found. Be the first to create a thread!</p>\r\n            ) : (\r\n                <ThreadList threads={threads} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForumPage;"]},"metadata":{},"sourceType":"module"}